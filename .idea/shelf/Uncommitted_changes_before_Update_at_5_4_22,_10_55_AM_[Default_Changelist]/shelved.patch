Index: network_analysis/algorithms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import networkx as nx\nimport networkx.algorithms.community as nx_comm\nimport pandas as pd\nimport numpy as np\nimport markov_clustering as mc\nimport statsmodels.api as sm\nimport scipy.cluster.hierarchy as sch\nimport random\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom numpy.random import random\nfrom statsmodels.graphics.regressionplots import abline_plot\nfrom sklearn.cluster import AgglomerativeClustering\n\n\ndef hierarch_clust(graph, nodes, allen_groups, plot=False):\n    adj_matrix = nx.to_numpy_matrix(graph)\n    distances = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65]\n    num_clusts = []\n    mods = []\n    for i in distances:\n        hc = AgglomerativeClustering(n_clusters=None, linkage='ward', distance_threshold=i, compute_distances=True,\n                                     compute_full_tree=True)\n        org_hc = hc.fit_predict(adj_matrix)\n        mapped_nodes = {node: cluster for node, cluster in zip(nodes.values(), org_hc)}\n        sorted_mapped_nodes = {node: cluster for node, cluster in\n                               sorted(mapped_nodes.items(), key=lambda item: item[1])}\n        list_of_node_sets = [{node for node, cluster in sorted_mapped_nodes.items() if cluster == j} for j in\n                             range(0, max(sorted_mapped_nodes.values()) + 1)]\n        mods.append(nx.algorithms.community.modularity(graph, list_of_node_sets))\n        num_clusters = len(np.unique(org_hc))\n        num_clusts.append(num_clusters)\n    modularities = {dist: mod for dist, mod in zip(distances, mods)}\n    max_mod_dist = max(modularities, key=modularities.get)\n    d = {\"Distance Cut\": distances, \"Number of Clusters\": num_clusts}\n    df_clust_cuts = pd.DataFrame(d, columns=[\"Distance Cut\", \"Number of Clusters\"])\n    # Next, perform the HC on the distance that is \"halfway\" down the dendrogram\n    hc_2 = AgglomerativeClustering(n_clusters=None, linkage='ward', distance_threshold=max_mod_dist,\n                                   compute_distances=True,compute_full_tree=True)\n    org_hc_2 = hc_2.fit_predict(adj_matrix)\n    nodes_keys = np.array(list(nodes.keys()))\n    clust_assigns = pd.DataFrame(zip(nodes_keys,org_hc_2),columns=[\"Node Number\",\"Cluster Number\"])\n    clust_assigns[\"Allen Group Name\"] = allen_groups\n    clusters = set()\n    for i in list(np.unique(org_hc_2)):\n        cluster = tuple(clust_assigns.loc[clust_assigns[\"Cluster Number\"] ==i,\"Node Number\"].tolist())\n        clusters.add(cluster)\n    if plot:\n        plt.figure()\n        sch.dendrogram(sch.linkage(adj_matrix,method='ward',metric='euclidean'))\n    return df_clust_cuts,clust_assigns,sorted(list(clusters))\n\n\ndef markov(graph, plot=False):\n    matrix = nx.to_scipy_sparse_matrix(graph)  # Will generate an adjacency matrix from the graph\n    inflation_values = []\n    modularity_values = []\n    for inflation in [i / 10 for i in range(15, 135, 5)]:\n        result = mc.run_mcl(matrix, inflation=inflation)\n        clusters = mc.get_clusters(result)\n        Q = mc.modularity(matrix=result, clusters=clusters)\n        inflation_values.append(inflation)\n        modularity_values.append(Q)\n    d = {\"Inflation\": inflation_values, \"Modularity\": modularity_values}\n    df = pd.DataFrame(d, columns=[\"Inflation\", \"Modularity\"])  # Make a df of the inflation and modularity values\n    column = df[\"Modularity\"]\n    max_index = column.idxmax()\n    optimal_inflation = df[\"Inflation\"].iloc[max_index]\n    mc_results = mc.run_mcl(matrix, inflation=optimal_inflation)\n    mc_clusters = mc.get_clusters(mc_results)\n    if plot:\n        numnodes = graph.number_of_nodes()\n        positions = {i: (random.random() * 2 - 1, random.random() * 2 - 1) for i in range(numnodes)}\n        mc.draw_graph(matrix, mc_clusters, pos=positions, node_size=100, with_labels=True, edge_color='silver')\n    return df, mc_clusters\n\n\ndef louvain(graph,nodes):\n    node_nums = {value:key for key,value in nodes.items()}\n    graph = nx.relabel_nodes(graph,node_nums)\n    resolutions = [0.5,1.0,1.2,1.4,1.6,1.8,2.0]\n    lou_mod = []\n    for i in resolutions:\n        lou_clust = nx_comm.louvain_communities(graph,resolution=i)\n        lou_mod.append(nx_comm.modularity(graph,lou_clust))\n    lou_modularities = {res:mod for res, mod in zip(resolutions,lou_mod)}\n    max_res = max(lou_modularities,key=lou_modularities.get)\n    max_mod_lou_comm = nx_comm.louvain_communities(graph,resolution=max_res)\n    max_mod_lou_comm = [tuple(c) for c in max_mod_lou_comm]\n    return max_mod_lou_comm\n\n\ndef in_silico_deletion(G, plot=False):\n    degree_list = [degree for degree in dict(G.degree).values()]\n    og_global_eff = nx.global_efficiency(G)\n    delta_global_eff = [abs(nx.global_efficiency(nx.from_pandas_adjacency(disruptPropagate(G, node))) - og_global_eff)\n                        for node in list(G.nodes())]\n    degree_list_const = sm.tools.add_constant(degree_list)\n    my_model = sm.OLS(delta_global_eff, degree_list_const).fit()\n    print(my_model.summary())\n    if plot:\n        sns.set()\n        fig, ax = plt.subplots()\n        plt.scatter(degree_list, delta_global_eff)\n        abline_plot(model_results=my_model, ax=ax)\n    return delta_global_eff\n\n# this is the disruption propagation model from Vetere et al. 2018\ndef disruptPropagate(G, target):\n    G = nx.to_pandas_adjacency(G)  # create df with node names\n    # keep track of negative weights, create a \"negs\" matrix that encodes where negative  correlations were in the\n    # correlation matrix\n    Negs = G\n    Negs = np.where((Negs < 0), -1, Negs)\n    Negs = np.where((Negs > 0), 1, Negs)\n    # keep track of edge updates\n    Update = np.ones(G.shape)\n    np.fill_diagonal(Update, 0)\n    # make a copy of the matrix\n    G_0 = abs(G.copy())\n    # remove edges on target node\n    G.loc[target, :] = 0\n    G.loc[:, target] = 0\n    deltaEdge = pd.DataFrame(G_0 - G)  # edge change df\n    Update = np.where((deltaEdge > 0), 0, Update)\n    iterG = [G_0, G]  # list that stores iterations of disrupt propagate model\n    while True:\n        xGraph = iterG[-1]  # arbitrary variable that stores the latest iteration of the model\n        yGraph = deltaEdge.tail(len(deltaEdge))  # arbitrary variable that stores the latest entry in the deltaEdge df\n        # calculate edge weights\n        deltaEdge_sum = yGraph.sum()\n        deltaEdge_sum = deltaEdge_sum.to_numpy()\n        edgeWeights = np.add.outer(deltaEdge_sum, deltaEdge_sum)\n        # calculate node weights\n        nodeWeights = xGraph.sum()\n        nodeWeights = nodeWeights.to_numpy()\n        nodeWeights = np.add.outer(nodeWeights, nodeWeights)\n        nodeWeights = nodeWeights - (2 * xGraph)\n        # update edge weights\n        UpdateMult = Update\n        UpdateMult = np.where((Update > 1), 1, UpdateMult)\n        UpdateMult = np.where((Update < 0), 0, UpdateMult)\n\n        deltaEdge_x = edgeWeights / nodeWeights\n        deltaEdge_x.replace(np.nan, 0)\n        deltaEdge_x.replace([np.inf, -np.inf], 0, inplace=True)\n        deltaEdge_x = deltaEdge_x * xGraph * UpdateMult\n\n        xGraph = xGraph - deltaEdge_x\n        xGraph = np.where((xGraph < 0), 0, xGraph)\n        # update matrices\n        UpdateSub = Update * 0\n        UpdateSub = np.where((deltaEdge_x > 0), 1, UpdateSub)\n        Update = Update - UpdateSub\n        Update = np.where((xGraph == 0), 0, Update)\n        iterG.append(pd.DataFrame(xGraph))\n        deltaEdge.append(yGraph)\n        if iterG[-1].equals(iterG[-2]):\n            break\n        finalMat = np.multiply(Negs, iterG[-1])\n        finalMat = pd.DataFrame(finalMat)\n\n    return finalMat\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/network_analysis/algorithms.py b/network_analysis/algorithms.py
--- a/network_analysis/algorithms.py	(revision 1081ddb08a178e654f4a209b08e97ba555ece82c)
+++ b/network_analysis/algorithms.py	(date 1650912680864)
@@ -1,16 +1,17 @@
+import random
+
+import markov_clustering as mc
+import matplotlib.pyplot as plt
 import networkx as nx
 import networkx.algorithms.community as nx_comm
-import pandas as pd
 import numpy as np
-import markov_clustering as mc
-import statsmodels.api as sm
+import pandas as pd
 import scipy.cluster.hierarchy as sch
-import random
 import seaborn as sns
-import matplotlib.pyplot as plt
+import statsmodels.api as sm
 from numpy.random import random
+from sklearn.cluster import AgglomerativeClustering
 from statsmodels.graphics.regressionplots import abline_plot
-from sklearn.cluster import AgglomerativeClustering
 
 
 def hierarch_clust(graph, nodes, allen_groups, plot=False):
@@ -36,19 +37,19 @@
     df_clust_cuts = pd.DataFrame(d, columns=["Distance Cut", "Number of Clusters"])
     # Next, perform the HC on the distance that is "halfway" down the dendrogram
     hc_2 = AgglomerativeClustering(n_clusters=None, linkage='ward', distance_threshold=max_mod_dist,
-                                   compute_distances=True,compute_full_tree=True)
+                                   compute_distances=True, compute_full_tree=True)
     org_hc_2 = hc_2.fit_predict(adj_matrix)
     nodes_keys = np.array(list(nodes.keys()))
-    clust_assigns = pd.DataFrame(zip(nodes_keys,org_hc_2),columns=["Node Number","Cluster Number"])
+    clust_assigns = pd.DataFrame(zip(nodes_keys, org_hc_2), columns=["Node Number", "Cluster Number"])
     clust_assigns["Allen Group Name"] = allen_groups
     clusters = set()
     for i in list(np.unique(org_hc_2)):
-        cluster = tuple(clust_assigns.loc[clust_assigns["Cluster Number"] ==i,"Node Number"].tolist())
+        cluster = tuple(clust_assigns.loc[clust_assigns["Cluster Number"] == i, "Node Number"].tolist())
         clusters.add(cluster)
     if plot:
         plt.figure()
-        sch.dendrogram(sch.linkage(adj_matrix,method='ward',metric='euclidean'))
-    return df_clust_cuts,clust_assigns,sorted(list(clusters))
+        sch.dendrogram(sch.linkage(adj_matrix, method='ward', metric='euclidean'))
+    return df_clust_cuts, clust_assigns, sorted(list(clusters))
 
 
 def markov(graph, plot=False):
@@ -75,17 +76,17 @@
     return df, mc_clusters
 
 
-def louvain(graph,nodes):
-    node_nums = {value:key for key,value in nodes.items()}
-    graph = nx.relabel_nodes(graph,node_nums)
-    resolutions = [0.5,1.0,1.2,1.4,1.6,1.8,2.0]
+def louvain(graph, nodes):
+    node_nums = {value: key for key, value in nodes.items()}
+    graph = nx.relabel_nodes(graph, node_nums)
+    resolutions = [0.5, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0]
     lou_mod = []
     for i in resolutions:
-        lou_clust = nx_comm.louvain_communities(graph,resolution=i)
-        lou_mod.append(nx_comm.modularity(graph,lou_clust))
-    lou_modularities = {res:mod for res, mod in zip(resolutions,lou_mod)}
-    max_res = max(lou_modularities,key=lou_modularities.get)
-    max_mod_lou_comm = nx_comm.louvain_communities(graph,resolution=max_res)
+        lou_clust = nx_comm.louvain_communities(graph, resolution=i)
+        lou_mod.append(nx_comm.modularity(graph, lou_clust))
+    lou_modularities = {res: mod for res, mod in zip(resolutions, lou_mod)}
+    max_res = max(lou_modularities, key=lou_modularities.get)
+    max_mod_lou_comm = nx_comm.louvain_communities(graph, resolution=max_res)
     max_mod_lou_comm = [tuple(c) for c in max_mod_lou_comm]
     return max_mod_lou_comm
 
@@ -105,6 +106,7 @@
         abline_plot(model_results=my_model, ax=ax)
     return delta_global_eff
 
+
 # this is the disruption propagation model from Vetere et al. 2018
 def disruptPropagate(G, target):
     G = nx.to_pandas_adjacency(G)  # create df with node names
Index: network_analysis/NetworkFunctions.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"this is a set of functions necessary for the creation of undirected c-Fos networks.\nthis project was inspired and adapted from work done by Drs. Cesar Coelho, Anne Wheeler, and Gisella Vetere.\nwe thank them for their kind support throughout this process\"\"\"\n# author:ryan senne/ramirez group\n\n# import necessary libraries\n\nimport matplotlib.pyplot as plt\nimport networkx as nx\nimport numpy as np\nimport pandas as pd\nimport scipy.special as sc\nimport seaborn as sns\nfrom statsmodels.sandbox.stats.multicomp import multipletests\nimport matplotlib.patches as mpatches\nfrom bct.algorithms import centrality\nfrom scipy.spatial.distance import cdist\n\n\n# simple function for loading our csv file\ndef loadData(data):\n    \"\"\"\n    :param data:\n    :return:\n    \"\"\"\n    data = pd.read_csv(data)\n    data = data.apply(lambda x: x.fillna(x.mean()), axis=0)\n    node_names = data.columns.to_list()\n    node_number = list(item for item in range(0, len(node_names)))\n    nodes = {node_number[i]: node_names[i] for i in range(len(node_number))}\n    return data, nodes\n\n\n# correlate our c-Fos counts between brain regions, df for data\n# type for correlation coefficient i.e. \"pearson\"\ndef corrMatrix(data):\n    rVal = np.corrcoef(data, rowvar=False)  # calculate pearson coefficients\n    rVal[np.isnan(rVal)] = 0  # Will make all NaN values into zero\n    rf = rVal[np.triu_indices(rVal.shape[0], 1)]  # upper triangular matrix of data to shuffle for p-value calc\n    df = data.shape[1] - 2  # calculate degrees of freedom\n    ts = rf * rf * (df / (1 - rf * rf))  # calculate t's\n    pf = sc.betainc(0.5 * df, 0.5, df / (df + ts))  # calculate p's from beta incomplete function\n    # generate p-value matrix\n    p = np.zeros(shape=rVal.shape)\n    p[np.triu_indices(p.shape[0], 1)] = pf\n    p[np.tril_indices(p.shape[0], -1)] = p.T[np.tril_indices(p.shape[0], -1)]\n    p[np.diag_indices(p.shape[0])] = np.ones(p.shape[0])\n    # Multiple comparison of p values using Bonferroni correction\n    rejected, p_adjusted, _, alpha_corrected = multipletests(p, alpha=0.05, method='bonferroni', is_sorted=True)\n    return rVal, p, p_adjusted, alpha_corrected\n\n\n#Will generate a euclidean distance matrix from the raw data\ndef euclMatrix(data):\n    data = data.T\n    eucl_matrix = cdist(data,data,metric='euclidean')\n    return eucl_matrix\n\n\n# using this function we will threshold based off of p-values previously calculated\ndef significanceCheck(p_adjusted, corr, alpha, threshold=0.0, names=None, plot=False, include_Negs=True, Anatomy=None):\n    p_adjusted = np.where((p_adjusted >= alpha), 0, p_adjusted)  # if not significant --> zero\n    p_adjusted = np.where((p_adjusted != 0), 1, p_adjusted)  # if significant --> one\n    if not include_Negs:\n        p_adjusted = np.where((corr < 0), 0, p_adjusted)\n    threshold_matrix = np.multiply(corr, p_adjusted)  # remove any insignificant correlations\n    # remove correlations below threshold\n    threshold_matrix = np.where((abs(threshold_matrix) < threshold), 0, threshold_matrix)\n    # create a heatmap of correlations if wanted\n    if plot:\n        if names:\n            pandas_matrix = pd.DataFrame(threshold_matrix,index=list(names.values()),columns=list(names.values()))\n            if Anatomy:\n                #Create a sorted dictionary from the unpickled ROIs dictionary\n                sorted_dict = dict(sorted(Anatomy.items(),key=lambda item: item[1]))\n                list_for_sort = list(sorted_dict.keys())\n\n                #Reorganize the pandas_matrix to reflect the order of the Allen ROIs\n                allen_pandas = pandas_matrix[list_for_sort].loc[list_for_sort]\n\n                #Create color assignments for Allen ROIs\n                num_allens = list(sorted_dict.values())\n                allens_unique = np.unique(num_allens)\n                color_list = [color for color in sns.color_palette('Set3',n_colors=len(allens_unique))]\n                color_ref = dict(zip(map(str,allens_unique),color_list))\n                allen_colors = pd.Series(num_allens,index=allen_pandas.columns).map(color_ref)\n\n                #Create a legend for the Allen ROIs\n                cerebellum = mpatches.Patch(color=color_list[0],label='Cerebellum')\n                cort_plate = mpatches.Patch(color=color_list[1],label='Cortical Plate')\n                cort_subplate = mpatches.Patch(color=color_list[2],label='Cortical Subplate')\n                hypothalamus = mpatches.Patch(color=color_list[3],label='Hypothalamus')\n                medulla = mpatches.Patch(color=color_list[4],label='Medulla')\n                midbrain = mpatches.Patch(color=color_list[5],label='Midbrain')\n                pallidum = mpatches.Patch(color=color_list[6],label='Pallidum')\n                pons = mpatches.Patch(color=color_list[7],label='Pons')\n                striatum = mpatches.Patch(color=color_list[8],label='Striatum')\n                thalamus = mpatches.Patch(color=color_list[9],label='Thalamus')\n\n                #Plot the newly generated Allen ROI correlation maitrx\n                plt.figure()\n                sns.clustermap(allen_pandas,cmap='viridis',row_colors=allen_colors,col_colors=allen_colors,\n                               row_cluster=False,col_cluster=False,xticklabels=False,yticklabels=False,\n                               figsize=(10,10),cbar_pos=(0.1,0.15,.02,.4),cbar_kws={'label':'Pearson Correlation (R)'})\n                plt.legend(handles=[cerebellum,cort_plate,cort_subplate,hypothalamus,medulla,midbrain,pallidum,pons,striatum,thalamus],\n                           bbox_to_anchor=(5.0,1.6))\n        else:\n            pandas_matrix = pd.DataFrame(threshold_matrix)\n        sns.clustermap(pandas_matrix,cmap='viridis',method='ward',metric='euclidean',figsize=(10,10),cbar_pos=(.9,.9,.02,.10))\n        return threshold_matrix, pandas_matrix\n    else:\n        return threshold_matrix\n\n\n# we will create our undirected network graphs based on our matrices\ndef networx(corr_data, nodeLabel):\n    graph = nx.from_numpy_array(corr_data, create_using=nx.Graph)  # use the updated corr_data to make a graph\n    graph = nx.relabel_nodes(graph, nodeLabel)\n    remove = [node for node, degree in graph.degree() if degree < 1]\n    graph.remove_nodes_from(remove)\n    pos = nx.spring_layout(graph)\n    nx.set_node_attributes(graph, pos, name='pos')\n    return graph, pos\n\n\ndef grab_attributes(graph):\n    deg = nx.degree_centrality(graph)\n    between = nx.betweenness_centrality(graph)\n    eig = nx.eigenvector_centrality(graph)\n    deg_sort = {area: val for area, val in sorted(deg.items(), key=lambda ele: ele[1])}\n    between_sort = {area: val for area, val in sorted(between.items(), key=lambda ele: ele[1])}\n    eig_sort = {area: val for area, val in sorted(eig.items(), key=lambda ele: ele[1])}\n    return deg_sort, between_sort, eig_sort\n\n\ndef cluster_attributes(graph,communities):\n    adj_matrix = nx.to_numpy_matrix(graph) #Will create an adjacency matrix from the graph\n    WMDz = centrality.module_degree_zscore(adj_matrix,communities,flag=0) #calculate the WMDz\n    PC = centrality.participation_coef(adj_matrix,communities,'undirected')\n    return WMDz,PC\n\n\ndef get_ordered_degree_list(G):\n    degree_ordered = {k: v for k, v in sorted(dict(G.degree()).items(), key=lambda item: item[1])}\n    return degree_ordered\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/network_analysis/NetworkFunctions.py b/network_analysis/NetworkFunctions.py
--- a/network_analysis/NetworkFunctions.py	(revision 1081ddb08a178e654f4a209b08e97ba555ece82c)
+++ b/network_analysis/NetworkFunctions.py	(date 1651674548907)
@@ -5,16 +5,16 @@
 
 # import necessary libraries
 
+import matplotlib.patches as mpatches
 import matplotlib.pyplot as plt
 import networkx as nx
 import numpy as np
 import pandas as pd
 import scipy.special as sc
 import seaborn as sns
-from statsmodels.sandbox.stats.multicomp import multipletests
-import matplotlib.patches as mpatches
 from bct.algorithms import centrality
 from scipy.spatial.distance import cdist
+from statsmodels.sandbox.stats.multicomp import multipletests
 
 
 # simple function for loading our csv file
@@ -33,7 +33,7 @@
 
 # correlate our c-Fos counts between brain regions, df for data
 # type for correlation coefficient i.e. "pearson"
-def corrMatrix(data):
+def corrMatrix(data, transform=False):
     rVal = np.corrcoef(data, rowvar=False)  # calculate pearson coefficients
     rVal[np.isnan(rVal)] = 0  # Will make all NaN values into zero
     rf = rVal[np.triu_indices(rVal.shape[0], 1)]  # upper triangular matrix of data to shuffle for p-value calc
@@ -47,13 +47,16 @@
     p[np.diag_indices(p.shape[0])] = np.ones(p.shape[0])
     # Multiple comparison of p values using Bonferroni correction
     rejected, p_adjusted, _, alpha_corrected = multipletests(p, alpha=0.05, method='bonferroni', is_sorted=True)
-    return rVal, p, p_adjusted, alpha_corrected
+    if transform:
+        return np.arctanh(rVal), p, p_adjusted, np.arctanh(alpha_corrected)
+    else:
+        return rVal, p, p_adjusted, alpha_corrected
 
 
-#Will generate a euclidean distance matrix from the raw data
+# Will generate a euclidean distance matrix from the raw data
 def euclMatrix(data):
     data = data.T
-    eucl_matrix = cdist(data,data,metric='euclidean')
+    eucl_matrix = cdist(data, data, metric='euclidean')
     return eucl_matrix
 
 
@@ -69,44 +72,48 @@
     # create a heatmap of correlations if wanted
     if plot:
         if names:
-            pandas_matrix = pd.DataFrame(threshold_matrix,index=list(names.values()),columns=list(names.values()))
+            pandas_matrix = pd.DataFrame(threshold_matrix, index=list(names.values()), columns=list(names.values()))
             if Anatomy:
-                #Create a sorted dictionary from the unpickled ROIs dictionary
-                sorted_dict = dict(sorted(Anatomy.items(),key=lambda item: item[1]))
+                # Create a sorted dictionary from the unpickled ROIs dictionary
+                sorted_dict = dict(sorted(Anatomy.items(), key=lambda item: item[1]))
                 list_for_sort = list(sorted_dict.keys())
 
-                #Reorganize the pandas_matrix to reflect the order of the Allen ROIs
+                # Reorganize the pandas_matrix to reflect the order of the Allen ROIs
                 allen_pandas = pandas_matrix[list_for_sort].loc[list_for_sort]
 
-                #Create color assignments for Allen ROIs
+                # Create color assignments for Allen ROIs
                 num_allens = list(sorted_dict.values())
                 allens_unique = np.unique(num_allens)
-                color_list = [color for color in sns.color_palette('Set3',n_colors=len(allens_unique))]
-                color_ref = dict(zip(map(str,allens_unique),color_list))
-                allen_colors = pd.Series(num_allens,index=allen_pandas.columns).map(color_ref)
+                color_list = [color for color in sns.color_palette('Set3', n_colors=len(allens_unique))]
+                color_ref = dict(zip(map(str, allens_unique), color_list))
+                allen_colors = pd.Series(num_allens, index=allen_pandas.columns).map(color_ref)
 
-                #Create a legend for the Allen ROIs
-                cerebellum = mpatches.Patch(color=color_list[0],label='Cerebellum')
-                cort_plate = mpatches.Patch(color=color_list[1],label='Cortical Plate')
-                cort_subplate = mpatches.Patch(color=color_list[2],label='Cortical Subplate')
-                hypothalamus = mpatches.Patch(color=color_list[3],label='Hypothalamus')
-                medulla = mpatches.Patch(color=color_list[4],label='Medulla')
-                midbrain = mpatches.Patch(color=color_list[5],label='Midbrain')
-                pallidum = mpatches.Patch(color=color_list[6],label='Pallidum')
-                pons = mpatches.Patch(color=color_list[7],label='Pons')
-                striatum = mpatches.Patch(color=color_list[8],label='Striatum')
-                thalamus = mpatches.Patch(color=color_list[9],label='Thalamus')
+                # Create a legend for the Allen ROIs
+                cerebellum = mpatches.Patch(color=color_list[0], label='Cerebellum')
+                cort_plate = mpatches.Patch(color=color_list[1], label='Cortical Plate')
+                cort_subplate = mpatches.Patch(color=color_list[2], label='Cortical Subplate')
+                hypothalamus = mpatches.Patch(color=color_list[3], label='Hypothalamus')
+                medulla = mpatches.Patch(color=color_list[4], label='Medulla')
+                midbrain = mpatches.Patch(color=color_list[5], label='Midbrain')
+                pallidum = mpatches.Patch(color=color_list[6], label='Pallidum')
+                pons = mpatches.Patch(color=color_list[7], label='Pons')
+                striatum = mpatches.Patch(color=color_list[8], label='Striatum')
+                thalamus = mpatches.Patch(color=color_list[9], label='Thalamus')
 
-                #Plot the newly generated Allen ROI correlation maitrx
+                # Plot the newly generated Allen ROI correlation maitrx
                 plt.figure()
-                sns.clustermap(allen_pandas,cmap='viridis',row_colors=allen_colors,col_colors=allen_colors,
-                               row_cluster=False,col_cluster=False,xticklabels=False,yticklabels=False,
-                               figsize=(10,10),cbar_pos=(0.1,0.15,.02,.4),cbar_kws={'label':'Pearson Correlation (R)'})
-                plt.legend(handles=[cerebellum,cort_plate,cort_subplate,hypothalamus,medulla,midbrain,pallidum,pons,striatum,thalamus],
-                           bbox_to_anchor=(5.0,1.6))
+                sns.clustermap(allen_pandas, cmap='viridis', row_colors=allen_colors, col_colors=allen_colors,
+                               row_cluster=False, col_cluster=False, xticklabels=False, yticklabels=False,
+                               figsize=(10, 10), cbar_pos=(0.1, 0.15, .02, .4),
+                               cbar_kws={'label': 'Pearson Correlation (R)'})
+                plt.legend(
+                    handles=[cerebellum, cort_plate, cort_subplate, hypothalamus, medulla, midbrain, pallidum, pons,
+                             striatum, thalamus],
+                    bbox_to_anchor=(5.0, 1.6))
         else:
             pandas_matrix = pd.DataFrame(threshold_matrix)
-        sns.clustermap(pandas_matrix,cmap='viridis',method='ward',metric='euclidean',figsize=(10,10),cbar_pos=(.9,.9,.02,.10))
+        sns.clustermap(pandas_matrix, cmap='viridis', method='ward', metric='euclidean', figsize=(10, 10),
+                       cbar_pos=(.9, .9, .02, .10))
         return threshold_matrix, pandas_matrix
     else:
         return threshold_matrix
@@ -116,8 +123,8 @@
 def networx(corr_data, nodeLabel):
     graph = nx.from_numpy_array(corr_data, create_using=nx.Graph)  # use the updated corr_data to make a graph
     graph = nx.relabel_nodes(graph, nodeLabel)
-    remove = [node for node, degree in graph.degree() if degree < 1]
-    graph.remove_nodes_from(remove)
+    # remove = [node for node, degree in graph.degree() if degree < 1]
+    # graph.remove_nodes_from(remove)
     pos = nx.spring_layout(graph)
     nx.set_node_attributes(graph, pos, name='pos')
     return graph, pos
@@ -133,11 +140,11 @@
     return deg_sort, between_sort, eig_sort
 
 
-def cluster_attributes(graph,communities):
-    adj_matrix = nx.to_numpy_matrix(graph) #Will create an adjacency matrix from the graph
-    WMDz = centrality.module_degree_zscore(adj_matrix,communities,flag=0) #calculate the WMDz
-    PC = centrality.participation_coef(adj_matrix,communities,'undirected')
-    return WMDz,PC
+def cluster_attributes(graph, communities):
+    adj_matrix = nx.to_numpy_matrix(graph)  # Will create an adjacency matrix from the graph
+    WMDz = centrality.module_degree_zscore(adj_matrix, communities, flag=0)  # calculate the WMDz
+    PC = centrality.participation_coef(adj_matrix, communities, 'undirected')
+    return WMDz, PC
 
 
 def get_ordered_degree_list(G):
Index: dev_file.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import network_analysis as net_a\nimport pandas as pd\nimport networkx as nx\n\n# THIS IS FOR TEST PURPOSES ONLY\nfile = '/home/ryansenne/PycharmProjects/Networks/csv_files/ChR2_Large_Network.csv'\nfile2 = '/home/ryansenne/PycharmProjects/Networks/csv_files/Control_Large_Network.csv'\nallen_groups = pd.read_csv('/home/ryansenne/PycharmProjects/Networks/csv_files/ROIs.csv')\n\ntest_data, test_nodes = net_a.loadData(file)\nrvals, p, p_adj, rej = net_a.corrMatrix(test_data)\nthreshold_matrix = net_a.significanceCheck(p_adj, rvals, 0.001, names=test_nodes, include_Negs=False)\nG, pos = net_a.networx(threshold_matrix, test_nodes)\ndf, mark_clust = net_a.markov(G)\ncolor_list = net_a.grab_color_attributes(mark_clust, test_nodes)\npos_dict = net_a.get_position_data(mark_clust, test_nodes)\nnet_a.graph_network(G, list(color_list.values()), pos_dict)\n# my_del = net_a.in_silico_deletion(G, plot=True)\nmy_list = net_a.get_ordered_degree_list(G)\n# clust, result = net_a.hierarch_clust(threshold_matrix, test_nodes, allen_groups['Allen Group Name'])
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dev_file.py b/dev_file.py
--- a/dev_file.py	(revision 1081ddb08a178e654f4a209b08e97ba555ece82c)
+++ b/dev_file.py	(date 1651675013181)
@@ -7,14 +7,15 @@
 file2 = '/home/ryansenne/PycharmProjects/Networks/csv_files/Control_Large_Network.csv'
 allen_groups = pd.read_csv('/home/ryansenne/PycharmProjects/Networks/csv_files/ROIs.csv')
 
-test_data, test_nodes = net_a.loadData(file)
+test_data, test_nodes = net_a.loadData(file2)
 rvals, p, p_adj, rej = net_a.corrMatrix(test_data)
-threshold_matrix = net_a.significanceCheck(p_adj, rvals, 0.001, names=test_nodes, include_Negs=False)
+threshold_matrix = net_a.significanceCheck(p_adj, rvals, 0.001, threshold=0.0, names=test_nodes, include_Negs=False)
 G, pos = net_a.networx(threshold_matrix, test_nodes)
 df, mark_clust = net_a.markov(G)
 color_list = net_a.grab_color_attributes(mark_clust, test_nodes)
 pos_dict = net_a.get_position_data(mark_clust, test_nodes)
 net_a.graph_network(G, list(color_list.values()), pos_dict)
-# my_del = net_a.in_silico_deletion(G, plot=True)
-my_list = net_a.get_ordered_degree_list(G)
-# clust, result = net_a.hierarch_clust(threshold_matrix, test_nodes, allen_groups['Allen Group Name'])
\ No newline at end of file
+# # my_del = net_a.in_silico_deletion(G, plot=True)
+# my_list = net_a.get_ordered_degree_list(G)
+# clust, result = net_a.hierarch_clust(threshold_matrix, test_nodes, allen_groups['Allen Group Name'])
+# nx.sigma(G)
\ No newline at end of file
Index: csv_files/ChR2_Large_Network.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>AAA,ACA,ACB,AHN,AI,AT,ATN,AUD,AVP,AVPV,BAC,BLA,BMA,BST,CA1,CA2,CA3,CEA,CLA,CLI,CP,CS,CUN,DG,DMH,DN,DR,ECT,ENT,EP,EW,FC,FN,FS,GENd,GENv,GPe,GPi,GU,HEM,IA,IC,IF,IG,ILA,ILM,INC,IP,IPN,LA,LAT,LC,LD,LH,LHA,LPO,LS,MA,MA3,MBO,MD,ME,MEA,MED,MEPO,MEV,MH,MO,MPN,MPO,MRN,MS,MY-mot,MY-sat,MY-sen,NB,ND,NDB,OLF,ORB,OT,OV,P-mot,P-sat,P-sen,PA,PAG,PAR,PB,PBG,PCN,PD,PERI,PF,PH,PL,PMd,PMv,PN,POST,PP,PPN,PR,PRC,PRE,PRT,PS,PST,PSTN,PTLp,PVT,PVZ,PeF,ProS,RCH,RE,RH,RL,RN,RR,RSP,RT,SAG,SBPV,SCH,SCm,SCs,SF,SFO,SH,SI,SNc,SNr,SPA,SPF,SS,STN,SUB,Su3,TEa,TRS,TU,VAL,VERM,VIS,VISC,VLPO,VM,VMH,VMPO,VP,VTA,VTN,VeCB,ZI\n1043.627976450176,7263.786910254065,1060.2452451338931,2030.2085844839348,3530.03492846014,302.0729838505975,751.896539321217,12474.8727669283,1237.4116900578751,467.2854285024015,1451.8518518518515,2135.01124636321,1903.897045319125,1521.816182528135,2572.556164698285,770.0713220271,1112.2490872328299,824.932969073355,3030.22586740904,1509.74044012546,660.5442511515676,717.3852110594535,1471.5673294581552,1070.548036040102,3466.595772751415,11.899782221868124,1237.9897688042402,6521.342494403631,5864.47290118235,3834.90885179576,4519.252764010675,16.3682864450128,11.974061222873004,569.773227808256,504.1622855388165,718.7992579315605,108.01320085456436,94.4527572408816,2896.484289580535,152.12728451554625,2483.52174233908,3468.4993049526647,3778.57445306987,47.1397004664866,4224.85132699233,1147.624647457975,226.0341240245225,29.02020531795265,508.304759272778,2307.00998344632,306.220571690092,2679.589067648765,184.102631670689,2183.1716492197647,1464.1791303300952,958.6979921314439,4101.95252156214,389.441940658397,120.527306967985,1302.46227124748,1007.1815771328704,372.20210552467324,1795.00915074177,960.570629617356,436.2464845452025,737.732066591127,1089.8746990332065,3318.9774876967103,1118.5711213151671,2151.30989689699,824.2204693121095,1472.1010511024995,81.7606978583554,47.6764737607681,309.7042745694655,388.14133597639545,294.3674635737945,438.7029270078025,5557.35202021511,7473.1395219439255,1382.820270374705,0.0,361.1084785751065,497.1167927843625,296.4452508259905,1628.564521314885,3118.27328289368,1460.7517533655484,501.18964000266146,45.1339915373766,545.034837578125,2846.7168094140798,6229.7832556952,277.76780507950605,3316.9194928450197,7672.270913195131,2049.1741038659948,653.892079075395,867.9208626104991,5031.510663974905,1710.008858862585,618.772872559286,1221.039180362385,2264.244894574365,1822.482467388315,983.9342715137104,3929.0607572884855,234.3681468886495,1216.48178429899,20931.0050334779,4635.31362282239,2002.81038568729,3388.76860110938,3752.894674451255,561.9515104357165,1117.5446580098705,1395.378880231796,2460.04872880072,406.06690563460745,1403.7565877842449,9519.41479125062,156.841443138266,590.4761904761905,1776.8590625020352,1119.7091367143348,2792.892700030685,1096.3093309025785,723.4760850602435,92.73125674924776,834.433223097191,901.3050954219875,294.0030853213495,164.06226916275526,1241.67163211808,2202.73296568648,4598.2604531987,56.48110340008185,3849.589812876235,6077.7725106659,10015.240307531845,635.995631022326,703.0512033818466,113.776011629836,118.06252448475794,20710.2047778382,3069.595735435335,1207.4679457935215,103.6174247086854,491.43747866282354,2334.08035105304,80.0823649966473,725.0133627436015,318.79314025475,23.44322344322345,580.3229208018199\n1203.077087634255,4034.6192083914193,1934.91494144628,5750.65353272385,6205.465852222091,92.7706582692019,770.4248147561191,14799.30224016385,6554.897423687986,4342.789786374955,2638.683127572015,2916.61833291329,3907.56055592863,2469.963265980645,2553.5404045872,1098.3542034871355,1377.565518616475,1288.53717684587,5531.897275761095,1592.1961994521548,744.9337456671485,528.2102717941265,1248.397649183815,1831.74687364091,5978.829503448675,8.925251639975574,1023.045250378995,9550.699024961425,5323.62677314692,4323.893996468991,8421.654593976364,97.29763041937571,15.96632808914055,898.790532246067,693.451756588013,2347.28317074887,175.7348622391504,162.987781074302,4644.744412367065,211.2534883234415,4703.892936916275,4198.902588846335,1367.6217360621,39.663275214466005,3914.56433323224,1555.7702751081902,138.12536678261944,12.76889033989916,276.8206467629765,3878.83653571993,285.7257217672145,2631.000839956066,204.77986024788999,2685.96379630883,2328.39147220783,2655.829418696525,4860.8687236853,704.949928809796,309.132415022995,589.0922194159675,1521.612292740875,262.7396664699855,3742.025799432315,1312.800268377015,3624.504415399225,1163.775821493945,1820.554391873115,4822.46332587333,3943.8564611848797,5472.12299330898,1078.2844652451565,2574.137664105695,371.126543186216,347.4063432834735,464.925068689892,592.9118259650335,348.807749385295,1943.229934166065,5090.9275690308295,5333.805315394695,1285.3374244218985,3710.447265150645,661.3967195212755,527.7841655192556,736.365711482097,4409.14914545496,2867.223599617965,2450.0953343330902,1566.7271849183749,899.9101018386825,867.6325979115305,6028.723388838165,7442.251998107645,283.8570173184705,3440.65299921044,6365.094435389385,865.3130373302695,1415.2090291141465,728.4266424893956,4779.752869250745,3579.4772443141846,600.8212435243565,904.240140037734,4254.43403690023,3202.199261936295,1392.2241587490448,6336.525774206624,389.331827276059,2524.86648014115,9037.24551550119,7860.63996274287,3897.250473998355,4554.90967747454,4569.95838200047,4281.299040484315,1006.2819089445345,1496.917722301725,1490.487807755605,314.564971597621,1526.128547420315,5817.59433609769,183.79160982223948,1473.3786848072546,5959.854285732905,1831.4724953836899,2709.92288470357,1886.649351359905,1060.0232841817,412.45950451347744,1047.6684808668595,1153.94948023041,480.526435776686,231.8766669495477,3255.123279333225,5371.6420074037,5504.983433555225,231.1028850365335,4329.99706548428,1834.596054101555,12618.0119813761,1669.24217254323,4325.942879804275,97.91407449341736,194.17304574129952,11879.748401192675,4119.14494520755,4804.5534135394555,181.340758373929,2485.4781850182953,3829.03710800494,162.98046612760794,1190.447692426471,238.525581726322,11.7216117216117,1000.728110652771\n1508.7475391242249,3436.963499416115,928.046751614052,3673.84772330328,3392.3091350810955,278.48037317077296,459.56786983919,10139.331401095955,1770.41134129692,1653.465484591075,1191.7695473251051,2174.173722598435,3119.54768908613,1067.515861917222,1889.64113391871,612.3275548703295,1156.957068130635,807.4796763704414,3411.7617082110255,694.2877297897026,380.17248404766394,577.08324419775,961.683538652842,1341.5884226970452,7300.825998089309,20.833333333333353,796.201958023242,5104.242571011435,4638.700313622339,3013.248036786545,1137.6286694624496,112.7538286136873,101.75760538698265,787.372277005529,305.218877361314,1842.9890649434951,117.5741142315492,40.150221286505,2782.07546618057,320.157778363781,2599.3542048990403,4913.136686954705,733.94495412844,87.94355015813395,3308.866190573255,850.3009497728435,75.146771037182,45.2715202960061,421.73175368482197,3086.28181651971,136.04685614136548,3182.0120178329144,157.5464760363586,1454.44822941537,1354.078478175885,1114.1164116140553,3047.75428390375,181.00319593649766,301.3182674199625,962.1003624657125,682.0997392996475,773.3821930995935,2859.3653945394453,672.5138078310144,1664.170388677565,1801.09823062843,974.550505529912,3696.3625680933146,1453.9046982703248,1888.43971297228,772.8019199190339,1023.5235679227695,150.3693932432725,170.8701597261654,330.0244921460005,1221.41643881281,141.7527005454705,568.7385973248315,5473.250348789345,4358.23885030639,1155.016795631505,785.775459856065,663.1419263859596,525.5901850040029,488.49018328605297,2557.007141629775,2869.4185336175497,1521.262908440335,677.695034361572,560.9015782340225,314.5231945832345,1295.0161587177358,3845.300535915875,108.22685033639274,4459.402280571325,4212.56559302607,1563.6467334538124,1741.95444523088,547.485671728783,4024.5668729416698,1464.27891342325,552.547085920958,805.2016445500356,4061.3470050156902,2928.931917698655,870.9229978877805,3233.196962314025,1092.436267942008,1011.1269382052094,9322.151438569821,5900.066784310426,3690.806574084925,3157.00962893941,2985.082414476405,1150.1142161111816,901.0484569390065,1026.752177523366,601.3928618461015,268.96605044921597,1700.093641473535,5892.089632445755,111.9330924681285,529.6598639455785,4088.06980730005,2103.698773278365,2365.0958150370598,2106.275548783965,383.58541645670346,0.0,268.2841225351345,918.8289078844625,177.35817541187998,83.3231503278198,2014.100183783755,2899.233664824675,3637.5951536515404,82.18804427411786,2654.486891749785,2858.921794477295,9536.352405580485,567.3676632569995,1331.5442987024599,64.83796332132245,269.438996786742,11745.155848995,1874.307783788955,3254.23080766607,135.999153071866,1185.3523187197186,3348.94164294468,80.7883846296141,383.5599105320875,158.827296662634,47.0415288496876,673.6216905435135\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/csv_files/ChR2_Large_Network.csv b/csv_files/ChR2_Large_Network.csv
--- a/csv_files/ChR2_Large_Network.csv	(revision 1081ddb08a178e654f4a209b08e97ba555ece82c)
+++ b/csv_files/ChR2_Large_Network.csv	(date 1651674281358)
@@ -1,4 +1,6 @@
 AAA,ACA,ACB,AHN,AI,AT,ATN,AUD,AVP,AVPV,BAC,BLA,BMA,BST,CA1,CA2,CA3,CEA,CLA,CLI,CP,CS,CUN,DG,DMH,DN,DR,ECT,ENT,EP,EW,FC,FN,FS,GENd,GENv,GPe,GPi,GU,HEM,IA,IC,IF,IG,ILA,ILM,INC,IP,IPN,LA,LAT,LC,LD,LH,LHA,LPO,LS,MA,MA3,MBO,MD,ME,MEA,MED,MEPO,MEV,MH,MO,MPN,MPO,MRN,MS,MY-mot,MY-sat,MY-sen,NB,ND,NDB,OLF,ORB,OT,OV,P-mot,P-sat,P-sen,PA,PAG,PAR,PB,PBG,PCN,PD,PERI,PF,PH,PL,PMd,PMv,PN,POST,PP,PPN,PR,PRC,PRE,PRT,PS,PST,PSTN,PTLp,PVT,PVZ,PeF,ProS,RCH,RE,RH,RL,RN,RR,RSP,RT,SAG,SBPV,SCH,SCm,SCs,SF,SFO,SH,SI,SNc,SNr,SPA,SPF,SS,STN,SUB,Su3,TEa,TRS,TU,VAL,VERM,VIS,VISC,VLPO,VM,VMH,VMPO,VP,VTA,VTN,VeCB,ZI
-1043.627976450176,7263.786910254065,1060.2452451338931,2030.2085844839348,3530.03492846014,302.0729838505975,751.896539321217,12474.8727669283,1237.4116900578751,467.2854285024015,1451.8518518518515,2135.01124636321,1903.897045319125,1521.816182528135,2572.556164698285,770.0713220271,1112.2490872328299,824.932969073355,3030.22586740904,1509.74044012546,660.5442511515676,717.3852110594535,1471.5673294581552,1070.548036040102,3466.595772751415,11.899782221868124,1237.9897688042402,6521.342494403631,5864.47290118235,3834.90885179576,4519.252764010675,16.3682864450128,11.974061222873004,569.773227808256,504.1622855388165,718.7992579315605,108.01320085456436,94.4527572408816,2896.484289580535,152.12728451554625,2483.52174233908,3468.4993049526647,3778.57445306987,47.1397004664866,4224.85132699233,1147.624647457975,226.0341240245225,29.02020531795265,508.304759272778,2307.00998344632,306.220571690092,2679.589067648765,184.102631670689,2183.1716492197647,1464.1791303300952,958.6979921314439,4101.95252156214,389.441940658397,120.527306967985,1302.46227124748,1007.1815771328704,372.20210552467324,1795.00915074177,960.570629617356,436.2464845452025,737.732066591127,1089.8746990332065,3318.9774876967103,1118.5711213151671,2151.30989689699,824.2204693121095,1472.1010511024995,81.7606978583554,47.6764737607681,309.7042745694655,388.14133597639545,294.3674635737945,438.7029270078025,5557.35202021511,7473.1395219439255,1382.820270374705,0.0,361.1084785751065,497.1167927843625,296.4452508259905,1628.564521314885,3118.27328289368,1460.7517533655484,501.18964000266146,45.1339915373766,545.034837578125,2846.7168094140798,6229.7832556952,277.76780507950605,3316.9194928450197,7672.270913195131,2049.1741038659948,653.892079075395,867.9208626104991,5031.510663974905,1710.008858862585,618.772872559286,1221.039180362385,2264.244894574365,1822.482467388315,983.9342715137104,3929.0607572884855,234.3681468886495,1216.48178429899,20931.0050334779,4635.31362282239,2002.81038568729,3388.76860110938,3752.894674451255,561.9515104357165,1117.5446580098705,1395.378880231796,2460.04872880072,406.06690563460745,1403.7565877842449,9519.41479125062,156.841443138266,590.4761904761905,1776.8590625020352,1119.7091367143348,2792.892700030685,1096.3093309025785,723.4760850602435,92.73125674924776,834.433223097191,901.3050954219875,294.0030853213495,164.06226916275526,1241.67163211808,2202.73296568648,4598.2604531987,56.48110340008185,3849.589812876235,6077.7725106659,10015.240307531845,635.995631022326,703.0512033818466,113.776011629836,118.06252448475794,20710.2047778382,3069.595735435335,1207.4679457935215,103.6174247086854,491.43747866282354,2334.08035105304,80.0823649966473,725.0133627436015,318.79314025475,23.44322344322345,580.3229208018199
-1203.077087634255,4034.6192083914193,1934.91494144628,5750.65353272385,6205.465852222091,92.7706582692019,770.4248147561191,14799.30224016385,6554.897423687986,4342.789786374955,2638.683127572015,2916.61833291329,3907.56055592863,2469.963265980645,2553.5404045872,1098.3542034871355,1377.565518616475,1288.53717684587,5531.897275761095,1592.1961994521548,744.9337456671485,528.2102717941265,1248.397649183815,1831.74687364091,5978.829503448675,8.925251639975574,1023.045250378995,9550.699024961425,5323.62677314692,4323.893996468991,8421.654593976364,97.29763041937571,15.96632808914055,898.790532246067,693.451756588013,2347.28317074887,175.7348622391504,162.987781074302,4644.744412367065,211.2534883234415,4703.892936916275,4198.902588846335,1367.6217360621,39.663275214466005,3914.56433323224,1555.7702751081902,138.12536678261944,12.76889033989916,276.8206467629765,3878.83653571993,285.7257217672145,2631.000839956066,204.77986024788999,2685.96379630883,2328.39147220783,2655.829418696525,4860.8687236853,704.949928809796,309.132415022995,589.0922194159675,1521.612292740875,262.7396664699855,3742.025799432315,1312.800268377015,3624.504415399225,1163.775821493945,1820.554391873115,4822.46332587333,3943.8564611848797,5472.12299330898,1078.2844652451565,2574.137664105695,371.126543186216,347.4063432834735,464.925068689892,592.9118259650335,348.807749385295,1943.229934166065,5090.9275690308295,5333.805315394695,1285.3374244218985,3710.447265150645,661.3967195212755,527.7841655192556,736.365711482097,4409.14914545496,2867.223599617965,2450.0953343330902,1566.7271849183749,899.9101018386825,867.6325979115305,6028.723388838165,7442.251998107645,283.8570173184705,3440.65299921044,6365.094435389385,865.3130373302695,1415.2090291141465,728.4266424893956,4779.752869250745,3579.4772443141846,600.8212435243565,904.240140037734,4254.43403690023,3202.199261936295,1392.2241587490448,6336.525774206624,389.331827276059,2524.86648014115,9037.24551550119,7860.63996274287,3897.250473998355,4554.90967747454,4569.95838200047,4281.299040484315,1006.2819089445345,1496.917722301725,1490.487807755605,314.564971597621,1526.128547420315,5817.59433609769,183.79160982223948,1473.3786848072546,5959.854285732905,1831.4724953836899,2709.92288470357,1886.649351359905,1060.0232841817,412.45950451347744,1047.6684808668595,1153.94948023041,480.526435776686,231.8766669495477,3255.123279333225,5371.6420074037,5504.983433555225,231.1028850365335,4329.99706548428,1834.596054101555,12618.0119813761,1669.24217254323,4325.942879804275,97.91407449341736,194.17304574129952,11879.748401192675,4119.14494520755,4804.5534135394555,181.340758373929,2485.4781850182953,3829.03710800494,162.98046612760794,1190.447692426471,238.525581726322,11.7216117216117,1000.728110652771
-1508.7475391242249,3436.963499416115,928.046751614052,3673.84772330328,3392.3091350810955,278.48037317077296,459.56786983919,10139.331401095955,1770.41134129692,1653.465484591075,1191.7695473251051,2174.173722598435,3119.54768908613,1067.515861917222,1889.64113391871,612.3275548703295,1156.957068130635,807.4796763704414,3411.7617082110255,694.2877297897026,380.17248404766394,577.08324419775,961.683538652842,1341.5884226970452,7300.825998089309,20.833333333333353,796.201958023242,5104.242571011435,4638.700313622339,3013.248036786545,1137.6286694624496,112.7538286136873,101.75760538698265,787.372277005529,305.218877361314,1842.9890649434951,117.5741142315492,40.150221286505,2782.07546618057,320.157778363781,2599.3542048990403,4913.136686954705,733.94495412844,87.94355015813395,3308.866190573255,850.3009497728435,75.146771037182,45.2715202960061,421.73175368482197,3086.28181651971,136.04685614136548,3182.0120178329144,157.5464760363586,1454.44822941537,1354.078478175885,1114.1164116140553,3047.75428390375,181.00319593649766,301.3182674199625,962.1003624657125,682.0997392996475,773.3821930995935,2859.3653945394453,672.5138078310144,1664.170388677565,1801.09823062843,974.550505529912,3696.3625680933146,1453.9046982703248,1888.43971297228,772.8019199190339,1023.5235679227695,150.3693932432725,170.8701597261654,330.0244921460005,1221.41643881281,141.7527005454705,568.7385973248315,5473.250348789345,4358.23885030639,1155.016795631505,785.775459856065,663.1419263859596,525.5901850040029,488.49018328605297,2557.007141629775,2869.4185336175497,1521.262908440335,677.695034361572,560.9015782340225,314.5231945832345,1295.0161587177358,3845.300535915875,108.22685033639274,4459.402280571325,4212.56559302607,1563.6467334538124,1741.95444523088,547.485671728783,4024.5668729416698,1464.27891342325,552.547085920958,805.2016445500356,4061.3470050156902,2928.931917698655,870.9229978877805,3233.196962314025,1092.436267942008,1011.1269382052094,9322.151438569821,5900.066784310426,3690.806574084925,3157.00962893941,2985.082414476405,1150.1142161111816,901.0484569390065,1026.752177523366,601.3928618461015,268.96605044921597,1700.093641473535,5892.089632445755,111.9330924681285,529.6598639455785,4088.06980730005,2103.698773278365,2365.0958150370598,2106.275548783965,383.58541645670346,0.0,268.2841225351345,918.8289078844625,177.35817541187998,83.3231503278198,2014.100183783755,2899.233664824675,3637.5951536515404,82.18804427411786,2654.486891749785,2858.921794477295,9536.352405580485,567.3676632569995,1331.5442987024599,64.83796332132245,269.438996786742,11745.155848995,1874.307783788955,3254.23080766607,135.999153071866,1185.3523187197186,3348.94164294468,80.7883846296141,383.5599105320875,158.827296662634,47.0415288496876,673.6216905435135
+693.4428237272015,6842.04311677164,793.696896456727,1444.010308284901,759.137822965918,626.812387383595,604.126282671521,15877.812997462152,2556.3384630209316,1634.679413657555,131.687242798354,1907.887533260885,1764.52808075869,2112.66081443896,2913.4607051018,706.8807580942355,1505.591414938815,653.43071400513,1928.302529541855,1850.55398700601,508.919080541279,1768.695757255092,1134.02952701242,1698.82766754217,4432.53067189443,11.899782221868124,4522.80596253561,6102.43970607718,7091.331234807531,3201.771914753345,7457.8726648875345,32.43254347312525,3.989527490337865,333.54149604542897,881.3690685515915,2097.4813069390398,62.6343078693223,42.509230880466106,469.386775478099,131.6807874745345,1702.4963689290798,6075.063389318009,1881.609033168665,71.8501251769113,4758.2440371096545,1696.39512390777,276.72578229562055,5.80404106359055,471.26401571215354,2055.72403417476,757.4335071146775,2191.63920656458,158.51634517826724,2038.3112887460452,1338.0754072193174,938.9849950045909,6169.723510820545,241.3732527468605,665.5049041915951,972.1151944951159,1216.91847573763,383.2874755442375,1834.78333417128,1226.764200319295,3172.2599858121503,1465.0047938638563,496.69689404506653,2966.8340019898296,1225.076126451646,2699.875029338942,965.5108063031514,3445.34972067014,383.2451752655335,776.1726951031981,396.138704353647,6289.712032592115,817.0721914025374,611.8386370112075,3838.2500562670903,1540.965848913725,389.087731134519,436.8600682593855,502.3441672736785,920.8880531052184,599.567693421166,5549.09814868465,4165.897729840544,2724.978007517955,1327.055125456445,0.0,704.1971412430455,1207.135921626595,5160.581021919736,500.661522318703,4119.80399646763,5651.14649030167,98.67893741278266,357.62511209884644,365.37901110643395,10434.26997792997,3930.619375243205,559.299299582531,2560.9555916190047,3179.8811414330103,4200.37747927533,4786.95549258311,5097.971523950865,1098.2041468646148,1143.1543662948625,15429.63282579615,8729.774199949525,1671.301535222995,2882.6302453604,7349.61917377333,128.61592509673926,1676.8754800972702,1886.8924577304288,1181.7253923861006,350.1541685700305,1526.50804100596,11161.71270779165,180.330216886107,111.88208616780071,1427.634880189765,151.44358082478044,4997.12041185821,9044.65882919261,1397.517419695635,95.952023988006,2101.031671881875,475.5807352843845,253.411472068462,52.32129181853445,1576.970412702495,2865.070371638435,3136.340587668915,15.4118034372887,6853.53882755802,4290.121393067925,11225.511933220345,1723.9883738051499,189.1375327287165,42.84961476542415,233.1820114803165,19680.395670662852,997.055409960787,2238.326012243815,314.078984229708,47.35581230215875,2172.69036238447,91.0177819499456,827.913063949952,453.71095139827804,23.5207644248438,1061.2564509958602
+3864.04980025825,3580.52288345645,2144.370169732675,13298.516521855548,1491.1877452102449,185.87811326473937,944.194832847334,12384.97101372779,9526.085951119876,6253.22725154123,3040.3292181069996,2755.538886295205,3974.093645243195,5268.17673411495,2547.424485681275,932.263377580568,1657.71621594502,2962.768300786215,4201.769483047739,431.5391259110355,885.5827193875765,305.094853869355,981.6158608005564,1343.527825977165,14080.15476442245,23.802884232332097,1015.8486585944685,7588.797765126816,6194.2796541845055,3262.87706924041,1304.6130385055264,64.25702811245,3.989527490337865,1098.2889595010954,373.3942357013995,4954.2457028074095,102.8757855207767,214.8703060783905,1499.70428155817,103.12476905659355,4054.18573939367,2955.790790713885,947.1277346506686,71.8501251769113,5484.5339313122295,1628.815144683055,289.250244135151,16.25131497805346,244.67061524998348,2093.32873128264,454.044522344951,2613.426374620405,197.82042084421448,1506.501917955275,3884.6513617868,4833.660356545125,7652.60374101161,1489.192879642454,123.1320228356625,717.163921657889,1128.308929709743,152.58159684481876,6276.25528123991,1535.790497843685,9420.811492401339,1177.721607251809,518.7264465040555,411.1973027756445,10021.87360357888,9496.90123396368,867.7033006539746,6623.0231029837505,527.1526416912965,1342.0531021102502,391.36434108650553,1460.40355897333,403.17005115845745,2182.12203692618,5066.07951744938,3737.8166719892547,833.691654751098,1941.73665171096,896.0133332344475,546.218890765579,573.8577630665025,4905.530364089805,3158.3761371647597,4058.366036450625,1428.56767582265,45.1339915373766,1433.82757013906,7928.466878251675,5253.738269800225,573.808330996593,8847.85477994689,2393.8058097949274,834.7563146589205,1220.7804679235476,365.37901110643395,7210.579620786805,4410.85252063618,745.7547475867959,6653.906954881215,3443.3412445358954,8935.032821911465,1717.8263417466,13551.3326983302,1801.308587530565,3426.67088218863,5317.111432645845,6649.458353698445,7772.212365717675,9501.641061327271,4868.473332275225,2439.24109679724,3027.4623038036952,1631.699793289871,701.5008610923055,291.752255742436,1649.02394648486,4095.059697895095,317.858758458033,111.88208616780071,17894.5669953275,7519.35271467629,4183.189001409185,4674.9727130416595,2245.929056226085,44.75524475524475,2048.830162190485,1322.4048304481648,481.32257007117903,150.499754692095,3413.9323279187647,5205.00702146449,1140.3381486440576,225.862608164663,6014.53936654935,3739.21919224681,11165.272513786465,2400.9237689094552,1558.88622657048,269.060251947664,65.8527443624654,11887.527535411446,539.5271023627795,8775.394187445954,840.6685869974485,3221.94129041344,8094.170039762876,503.438007891839,898.0802956427635,393.937237600512,35.2811466372657,2645.642145297255
+1795.723972749495,5365.938875772195,3119.5206304676553,8845.587728202776,2944.9676638348647,301.6519879426775,680.1073665843885,11434.400666208645,6569.6859001108605,4262.30979176107,1328.3950617283965,3031.546812250399,4019.65840620152,4146.97944759142,2956.56960146665,899.9541232655184,1353.68147412719,1169.241730192108,6749.56277668958,1031.54552357286,1773.75919594857,969.906977832865,1193.94933750875,1966.680812324275,13841.37663254345,56.54595915332104,1516.7197146727349,6906.598411866875,7748.9692297004,3299.4795904860503,8590.926420129621,194.291231421851,57.886499872914754,909.7867870564195,516.0854271615844,1062.9565852107798,52.4336759684878,42.49354481741055,3740.1896755635403,349.18102329595274,2699.526127495945,4856.35584993442,1418.659139026115,131.40874029653796,7554.82458403256,1810.692352254635,353.0601751587555,119.56324590996496,819.4243308897351,4660.092290686528,565.780306422789,2481.100988563675,73.8000772939225,1642.3664478487099,2297.50262442547,2589.444762506535,5972.322143845615,515.615183060471,2549.3064574014243,1508.824115407275,1144.34755260822,803.5824974379675,3776.3834577143552,1529.01053168534,4713.01765559526,1915.4536738429351,1455.50259912716,2076.620221947035,7580.522229346205,7640.246641495734,1109.1914570628,3224.7582655146953,566.316990454716,1006.7584662543314,747.475796406168,3210.162388018685,1045.8253705286274,1615.73182084592,5044.82371645075,6746.412163371245,466.393052257656,2935.30697549565,781.2397803144274,791.638043271937,711.8162775842095,3989.60224076108,3830.6684376212397,5542.18261224869,1196.733344024115,67.19740023172875,905.8732486711685,6035.679608132979,4566.268839032497,935.7003434910155,9335.230653902901,5113.785961825681,1138.206871415338,2584.9430695363,681.151442541204,5654.62323781237,3774.140400553055,1035.4741870185985,3663.431987901965,8256.854846928589,11265.992778117019,2304.5288004620797,8043.622490700114,3761.426108063615,4776.2906353086255,6592.0049384635295,11159.736988421551,6555.458453069645,4898.83970962803,5870.895921514845,2993.5484518416997,3396.446542233495,3017.6597586615053,2925.488172854915,872.9734381807195,1728.91552500387,7028.592907455335,196.9322509915695,509.795918367347,11000.36884738451,7203.103305134485,3137.3524152232803,6051.44943488049,1299.9896437520201,566.0498422117615,2764.9399633205303,1087.6140625604785,654.1479163547365,318.46362716303304,6183.05269365219,6441.401465134935,2370.4369698865103,266.9195470403235,7514.22482362837,4599.2731385610805,9397.67653934605,876.4419080289915,1776.812326768535,407.5236605210015,184.669439965553,12190.45336982428,2059.47894988363,4162.55686335849,753.3061835561659,2273.792749009915,6639.734691603835,449.1110004626905,1711.957930462625,425.2472781612465,35.16483516483515,1271.74113163668
+2979.43244958505,10152.26724671954,3054.6916216140753,10810.272339809615,4206.624501350635,441.3552700267755,1715.0436472339702,13963.4782955302,10778.356030776049,6783.319299204875,1991.7695473251051,3273.9660276283353,4370.16758370093,4372.222955393065,5429.950916874261,2390.479700171725,2591.906363359315,1249.2824402516435,7320.881414637915,947.7967631198345,2524.05692608425,716.7891375975795,801.940383036364,2639.576675873075,16444.73644722925,32.72315618941385,1147.8737211786486,7157.40694493323,7585.885829918365,5399.86020066222,2048.036599313765,226.72377489497597,7.981794356605424,2178.026202183665,1347.1845754648525,2854.7404327052027,315.67945766244054,77.95711904210445,3775.788492566155,327.12737468624005,3268.8009189149752,5092.370000178855,1055.5257586450264,169.9314410338225,6303.87425273655,2651.2882714304,213.27213781980146,15.090506765335364,475.4469553821975,1765.9256931115656,876.2686839373675,3381.53388899658,258.9603901736929,1986.50217141048,1750.690451673865,3535.3635386319247,8145.528832273179,798.053710747581,725.768557675585,1000.5111794879865,2222.25385748484,1419.40933511382,4195.874102376785,2271.13075021739,7441.790790378665,2681.077311949794,1983.4586511286602,2889.023253916645,7735.08304410176,8864.36113650509,823.8174682840065,5391.85935439864,367.75421691689553,552.989039814226,699.5450361132365,1776.6712428288076,326.9276563429105,3671.1025426436154,8622.05310035891,9971.26991807569,1073.750106145958,2988.482826501,504.5373622748665,703.6944218507175,793.2709516300414,4639.358297572385,2434.86984303694,4595.91156652067,956.690383749009,0.0,1710.255264810953,6018.289059895946,7051.373831986245,1187.789428235875,8206.50097891199,8188.606819692935,3292.8202973529815,3269.7507284577296,822.9770423857796,4701.879573654185,2607.287449392715,974.866376787369,4415.98080649312,8666.752609567995,7873.944283779285,2835.86783314465,10886.8656590453,873.44913151365,1646.809518467274,13996.357654813066,14442.7409367126,7882.350536303395,6206.81042520251,7985.8854286662345,7537.293482271551,4454.690161924295,4312.867970530555,217.092833754181,606.189352864703,1243.6855390605704,12428.48291417335,228.70306381018202,274.829931972789,16555.664023043202,8927.119565995341,2869.774180366545,5495.348856265455,3447.192657489685,226.99699101498203,4475.72580366103,1770.84092210774,495.6674333572345,229.93655712018204,4300.00526823991,3389.80549913503,5151.851187794725,97.50095901434331,9195.24309639013,3597.9585783233397,12888.795926057152,4182.1259947555645,2292.6131777476003,401.54373519617,267.6474963489755,19562.9207808652,1795.80371621694,13859.77745625815,699.054915391829,4676.327476531875,14495.297980878251,521.382707269735,895.7597458343296,503.807016295453,0.0,1706.121560713921
+3472.123443160505,8219.662820145611,3961.7101439694443,10233.745739550599,5661.0538514019845,324.9920010777495,2185.833871200405,15026.7431610846,11163.334771076301,9802.50460331666,528.395061728395,4491.280232875795,4003.10171075618,5177.934184960561,6104.9013120369345,2537.71844721042,2077.309252097045,2888.266823910005,10123.51584304926,2238.66982509129,2313.28379009497,2074.389645792885,2235.433155034445,2928.68267343525,13064.13181141245,136.8898228560804,2278.495886653015,6760.429477558469,6329.0294462979455,6564.830695058935,2086.923370186808,2739.436518452328,75.89142172209915,2564.26097749586,1997.9996204990653,2649.752840599155,542.5953776537315,330.5802931033475,3668.3391414955904,425.276488498665,3730.2843381102753,5779.347104147875,2849.964714184895,2260.0523711252904,9135.0488973289,3590.31963667976,327.29867838412304,146.261834802481,2261.36840552861,4541.230395907665,1739.806927832235,4763.713898042255,886.646315046747,2772.987247659585,4039.1048066056046,5249.98713536855,9112.436929925765,5622.541348103456,1102.9787737856045,3561.4233148666353,3831.4765938504697,6314.68587932052,3144.1305676008496,3773.23504408005,18760.13525273465,1170.7487143728765,3847.561881411525,2261.459794283755,8967.18200717362,10521.99232470509,1033.8690571029724,4719.4244630475605,474.4355479068755,860.547139963408,817.659773390822,3139.506105295835,490.170529739074,4204.85821906817,6172.10855804175,13752.0619099633,83.79736469545465,4908.94913780982,1493.9758177443714,1338.4772521734299,1187.3353138011664,3393.82264065439,4173.73418285579,2040.4813007215598,1419.6129710655,268.537807389747,2308.16459776308,10153.065808732936,8425.811320565801,1423.039514177071,8459.65917195662,11141.31923873094,2572.266966348255,2544.851007036804,1694.394974581486,2674.0920202032903,6461.57157878178,1132.022856957832,4356.54219104601,8340.02611737605,3231.67707934372,2112.64497810829,13312.79881240275,3583.39091198577,2511.9162153678453,3695.21522517184,17170.043967150552,6776.54873446439,4972.831639938315,9081.42015682852,7456.16536722357,4229.655087268715,5994.477836080636,615.433082716835,522.658646794083,2430.5909861174596,8726.637350309415,381.40897789840903,1315.0566893424045,7707.737323314955,10175.59153175592,3058.95149634492,4248.086173058505,3911.7141675557505,962.405510531446,5158.141903081175,2362.10060436146,765.3892252512815,445.716095198516,5351.383372057606,4115.614161454385,3080.44890925896,503.8189578697069,8123.153506466009,4742.236970135475,12539.55286028405,2916.94095864257,2166.421423614145,840.4277674588441,565.456394243536,17743.1378482333,2206.79067671168,8727.28094300849,766.048781831097,7392.951339808796,6301.613224426355,687.5479468634425,958.8812303922255,344.9797196328185,46.96398786806725,2085.34774879249
Index: csv_files/Control_Large_Network.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>AAA,ACA,ACB,AHN,AI,AT,ATN,AUD,AVP,AVPV,BAC,BLA,BMA,BST,CA1,CA2,CA3,CEA,CLA,CLI,CP,CS,CUN,DG,DMH,DN,DR,ECT,ENT,EP,EW,FC,FN,FS,GENd,GENv,GPe,GPi,GU,HEM,IA,IC,IF,IG,ILA,ILM,INC,IP,IPN,LA,LAT,LC,LD,LH,LHA,LPO,LS,MA,MA3,MBO,MD,ME,MEA,MED,MEPO,MEV,MH,MO,MPN,MPO,MRN,MS,MY-mot,MY-sat,MY-sen,NB,ND,NDB,OLF,ORB,OT,OV,P-mot,P-sat,P-sen,PA,PAG,PAR,PB,PBG,PCN,PD,PERI,PF,PH,PL,PMd,PMv,PN,POST,PP,PPN,PR,PRC,PRE,PRT,PS,PST,PSTN,PTLp,PVT,PVZ,PeF,ProS,RCH,RE,RH,RL,RN,RR,RSP,RT,SAG,SBPV,SCH,SCm,SCs,SF,SFO,SH,SI,SNc,SNr,SPA,SPF,SS,STN,SUB,Su3,TEa,TRS,TU,VAL,VERM,VIS,VISC,VLPO,VM,VMH,VMPO,VP,VTA,VTN,VeCB,ZI\n3425.2231360063197,9871.29747653061,3265.36488611624,6788.8769906124,5329.318012919485,1299.715406766245,1987.530060966325,15532.1155214632,4955.01903581682,2220.33995904053,1851.85185185185,4430.218835118985,5170.449576976095,2702.717909729815,3937.065788634075,1352.885345767685,2579.664258445635,1721.33334151325,6796.388262692384,2866.0716841171297,1250.48280339646,1982.103469129695,1692.8950691259352,2239.01466507026,13879.3481914427,44.62127851698405,3570.3321070291395,11005.38667833262,8500.381237947195,7128.50768664606,9985.512771635531,682.6035600201315,13.966085592112224,1739.881654647355,1070.610921591029,2857.121821094084,509.96526313218203,521.9459051409846,4593.130543614515,868.243017966971,5188.680653148105,6156.92940728951,6184.55892731122,87.5633586657402,8155.205190184995,3307.163540565445,1182.64371113264,26.698588892516398,1465.8556160027435,3639.89104082368,636.3371204753545,2744.7179685985648,362.25872099252604,3299.14038676186,3584.4579942229198,2623.566704881675,6859.67076172192,1892.600281792565,1275.95558663455,3163.097462876225,2831.53364674759,3903.56075898264,6018.514125655055,3126.57208499675,3246.008015777085,1278.1312647084465,1018.3462470888035,6059.286268232305,3329.2775149099352,5071.45113284101,1332.56766430486,3703.0782104867303,190.84928647914398,86.56828462931139,566.110405733802,2508.884328277505,1209.5881375137085,878.367882908773,6560.9142615357105,12647.27684532955,2058.8159972442,229.065204330764,1049.1154574602579,1140.42339578348,868.1323837237641,5106.129151099115,4168.945759459781,5738.285192435895,1266.2513997473352,1352.2571913611216,2471.841972512055,2499.833340579395,8212.202912118326,988.7836475906549,8660.52610614945,11304.726336406351,5024.31571860304,6422.025841886931,1458.018974840525,9247.60265777307,2143.944098093275,1103.98618478765,3807.8270542518603,4953.9192539952255,6527.145625011501,2899.383939897265,7537.88510361979,2194.4856674217,4165.012754220335,22692.7186255288,9355.97601092478,6664.17831939514,7669.563782583589,5991.714129154175,2992.4947282459398,4132.62541299843,6574.843554000815,3760.8507037169647,583.6932043082645,1309.2381487358234,13262.4843773274,545.8478204563551,884.0362811791405,7115.85066242644,2345.836732941125,3702.7645840908353,5861.264122445105,2362.575717031165,92.73125674924776,1453.100206136645,2275.8744413783697,1058.198109130893,959.8302705421825,5022.55562485944,6505.129927645735,6816.14850432083,410.92786028345597,7425.15995118954,6529.604218124965,12828.130536974499,2787.5749081346903,3461.9331927500352,440.198291285541,365.808486848306,24938.060140111353,4676.9678913028,1523.0160281894546,824.9336658390321,1690.870306097695,3610.094793481885,239.5351092787245,1438.33355431417,1617.875186792855,23.4819939340336,2053.59365486929\n2204.75062190533,5570.75684059767,2820.9477460993603,7327.65275987339,3750.39189336281,301.39939039792523,920.0761866077655,11246.884490494494,5877.41299633036,2321.8911575889397,2511.9341563786,3281.13299507834,4328.28026929684,4518.47402725971,2183.7237121097,1916.9355344138198,1179.1435804878101,1399.3175210854351,5719.042212861775,2231.5583188965047,691.6063387371465,1039.4303596614,1633.0555085136002,1755.84036540202,12570.0922703754,77.36435343797305,1757.956190597525,4948.457923398515,5642.9388575671255,4154.732240628835,11412.88600838735,357.366037038178,73.87748234542275,1231.6264696388394,1014.7397880501856,3419.568440157635,198.8201546825265,396.68659150700455,3791.4843767007396,477.23848061238596,4560.723945879239,3819.07965399447,3200.90331686662,379.906348774505,8562.67560105285,1877.70466064245,720.0699583481864,88.2214241665761,1284.27363683921,3249.1608178108,196.16321910393202,1166.1174646249256,254.9456830226125,3984.328564428925,3831.617020095715,4071.277623248955,8713.116250852934,1327.387491081478,1414.71590467628,2204.881047517655,2224.1188113398102,25.22654575944845,5009.480690186425,2518.2339392068398,4618.393555689725,1264.185478950575,4281.016210306235,3874.7392259770645,4954.69884922778,5662.159042627734,1389.905095344655,3975.01552306023,146.1386549977815,85.4350798630827,240.268462729096,1369.829647168995,838.9782791243686,1701.90756317822,4905.127358926546,10262.2986128075,1966.039562351755,229.065204330764,814.6263319689045,626.7236529166246,710.79048593536,3905.876193708285,3375.22897344995,4175.81024039687,1327.1171576481916,3801.389979010645,456.7743247942665,4662.058171383855,3373.0002027519204,512.8094420725065,11235.497082212849,10156.290553730476,3680.71626599441,4506.61532283805,1104.296862351453,4007.8998869483103,2334.003957510575,1305.0047393608252,6474.65593554521,6184.01581074509,3842.3940978842957,1781.301216583975,6560.595528539345,2827.79877312409,5436.858393591499,8122.93884868436,9892.041853310096,4621.784670276265,8199.321280764554,3417.45574180151,2911.96874096696,3512.20880295886,3980.05123584389,2966.5986742271452,619.2668068324599,1895.8877954423251,4431.816819210175,322.682985343985,509.5238095238095,5504.089253246965,1497.88866463406,3351.8256118157396,2326.790081504045,4275.956614966515,680.990973044944,2875.0376928514597,1792.4192484226699,309.517270852441,150.509273023863,7227.03353920525,6303.9240294275405,4163.090778210075,400.8057780665695,3714.2227959281,4791.8077005175655,9759.82685404497,4086.2386588672553,2879.11109312819,135.829465116689,505.3024949086315,10068.088907650885,2195.820321429665,4502.9644981469155,825.538180292418,2450.427333411495,10548.075500937324,185.5631846254515,1372.8315234110985,267.5585284280935,70.4072113112907,2354.59233101465\n2647.44699653327,11222.708086483352,8478.729158812741,8875.31819031472,9527.04728496805,1788.929491605343,3048.9525952458753,8790.5149381076,10469.29196006533,1934.85235635963,5046.91358024691,7463.45873259571,8724.419128862964,5468.1200128050805,4521.05953658948,2076.1393349126947,2474.9112818235953,2790.985606920085,6070.76493989162,3083.780748762135,3066.306632820275,2666.6029136312955,1534.9691618440102,2024.292600792815,5963.03925396972,1493.3355243938051,3290.13031282235,7998.99600653045,9444.15184400314,8596.481253981994,6550.51467784979,532.552717262914,632.8414130136855,2383.09450288886,1828.415845053875,2659.13085632989,585.081412697139,550.1755899532404,10177.9877222643,1647.73652103552,6885.31051331543,4646.2183315721,4325.081157374734,277.2627350088679,13502.8460075437,4249.32092980369,1185.2564791497389,948.380309790692,1006.7324295945295,6334.411405394256,804.2893964363004,1304.6456031530652,354.28726265469896,2799.071707261335,3305.271719855905,6608.137314555504,9898.646729603495,3513.70893577203,1053.1339837723249,986.166887080063,3401.83593664207,62.7607838265892,8760.72211608856,4273.477807777355,3103.7357746363896,741.2185130305935,737.030285690853,6130.32168399283,7611.900519907274,9154.19439270416,1295.189629873201,5317.475656392935,1399.12937725463,1496.881622608736,1480.38059771373,1928.8424175877299,1438.6792474725999,3447.3586728152895,8497.98170354039,16651.93057034535,5704.548524323115,348.9153915966815,1500.74584642652,1609.2594140209749,1363.40999065475,7865.563026424899,3078.129334465505,5509.72275071414,1900.1225297329252,66.9456066945605,3490.07847217736,8534.353578829905,5444.985644663495,1558.42065310614,1811.0602618384,15458.14965822185,2633.42360903702,4101.135816041373,1500.631415341775,8227.79046838767,3032.18168119686,1098.360049534545,5775.315329494915,4743.0979698200745,6952.812125612325,2101.0979748252803,9207.380452470185,3534.7484664051053,2927.04993920356,13199.7546750984,11110.817170338749,3833.718743595925,6070.89660858363,7438.093195497535,5830.8934913034645,5384.56293249541,6407.394922351195,3865.47891942083,766.452239545275,1578.0488314802624,9904.496078314565,436.7122496308845,356.734693877551,9403.21535864869,4027.6549147593096,3227.28395784848,4420.86891761898,2922.465899099565,0.0,2474.98430494382,5459.006492742675,1323.7602598471594,711.8586913192275,5402.55864024097,4032.51100693761,6439.236381283836,513.7185405182015,9068.15077730238,2905.937698382995,10254.633588704644,3250.99105910475,1426.9936959925105,591.8924062441055,1047.2856461704291,18461.82086798995,6810.95732413747,7072.40362013756,1503.47975406787,2100.1370740767798,6413.68684494418,307.2751246146425,1145.967012181977,2798.54835266491,246.54155106194798,1885.8771277723\n2531.4641567305853,5133.583938547175,2631.775098637255,4482.630400616735,5483.23313679585,232.137143626964,456.80939051427697,13410.6274381251,2910.71363068894,3836.0568760549304,793.4156378600815,3808.223217674515,6372.52145540662,3430.07916698938,3856.724912203495,2871.528597751285,1386.5374579793051,2533.855246997965,8231.495584967859,1845.05873221913,693.297863561599,1485.58385576311,1427.97620978042,2210.7233096455548,8154.70342896277,50.593578200940144,2386.274114338135,8561.556055302555,6650.27287408709,4746.874154578295,9850.55280213495,81.841432225064,25.953843694633647,1880.504740969855,1032.255240669584,1972.931062851445,136.1867407742495,373.0651234412825,4472.579976293845,788.2770545944975,5584.4703930333,3557.5454803847806,2010.7833450952699,296.397691929241,6632.8533728276,976.8751185127375,200.86643816286653,29.02020531795265,740.241619853163,3352.7122833412996,215.331513950656,691.606900562126,173.21278470041895,1720.36349721863,3411.981466477205,2905.364980929115,7654.345772849645,800.8928843666695,1307.2121770466824,1901.9178273335701,1097.2038991765694,1076.7963727834544,6939.894494940994,1039.944528117367,4108.399041179585,751.677852348995,2747.799168483155,3496.44368216107,3162.2274579261602,4509.900470831604,1201.293757297705,2461.03031531939,191.649598413912,455.972570025024,556.402836361379,1278.99108984334,937.6726499301135,1266.6710896851705,6566.46868309135,6475.6718308493455,2856.4338403521897,4528.1282356099255,986.430535124407,886.7378973967855,508.910701746099,5837.709726883105,3830.6093775484396,5514.261262483235,955.9527076610555,919.4555751613545,197.1731322480925,3193.60027824877,7200.49811891275,243.1910913690795,7498.1631320464,7165.60429695508,1935.235703956435,9741.730171081439,406.82576174594453,5093.69382210275,1450.07161603868,954.5973201674125,1946.812376238675,4883.684507178255,5035.19119804724,1652.894191537235,6208.33379695421,5394.312631054019,6146.190222028825,15072.2593922163,7453.044474253005,3801.9771396773695,4925.67282134795,5186.95232408288,1009.9302696618486,1378.8307901789299,769.4337555873569,1934.86692050369,389.506758638572,1975.04655876147,7418.92013909561,208.68547038539648,325.7596371882085,4343.2861304259995,3315.641058673655,3236.4203124339047,3409.3394056414754,2741.933560151385,1617.9658422537,2473.0860682277653,1527.84174716544,420.584425372066,320.4025634994405,4213.21602644489,5224.512572736416,4856.987944601195,940.391953591533,4164.12629677203,4908.779721064845,12196.06793746935,1770.3454486456649,4520.209993578475,73.34332388454375,478.2385772113005,16736.5418308933,4830.055102414681,6800.067779819845,445.8465725290655,1706.97411371913,5879.51728654386,162.637113268293,495.8185586787125,185.013876040703,0.0,1655.40188506927\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/csv_files/Control_Large_Network.csv b/csv_files/Control_Large_Network.csv
--- a/csv_files/Control_Large_Network.csv	(revision 1081ddb08a178e654f4a209b08e97ba555ece82c)
+++ b/csv_files/Control_Large_Network.csv	(date 1651674334139)
@@ -1,5 +1,9 @@
 AAA,ACA,ACB,AHN,AI,AT,ATN,AUD,AVP,AVPV,BAC,BLA,BMA,BST,CA1,CA2,CA3,CEA,CLA,CLI,CP,CS,CUN,DG,DMH,DN,DR,ECT,ENT,EP,EW,FC,FN,FS,GENd,GENv,GPe,GPi,GU,HEM,IA,IC,IF,IG,ILA,ILM,INC,IP,IPN,LA,LAT,LC,LD,LH,LHA,LPO,LS,MA,MA3,MBO,MD,ME,MEA,MED,MEPO,MEV,MH,MO,MPN,MPO,MRN,MS,MY-mot,MY-sat,MY-sen,NB,ND,NDB,OLF,ORB,OT,OV,P-mot,P-sat,P-sen,PA,PAG,PAR,PB,PBG,PCN,PD,PERI,PF,PH,PL,PMd,PMv,PN,POST,PP,PPN,PR,PRC,PRE,PRT,PS,PST,PSTN,PTLp,PVT,PVZ,PeF,ProS,RCH,RE,RH,RL,RN,RR,RSP,RT,SAG,SBPV,SCH,SCm,SCs,SF,SFO,SH,SI,SNc,SNr,SPA,SPF,SS,STN,SUB,Su3,TEa,TRS,TU,VAL,VERM,VIS,VISC,VLPO,VM,VMH,VMPO,VP,VTA,VTN,VeCB,ZI
-3425.2231360063197,9871.29747653061,3265.36488611624,6788.8769906124,5329.318012919485,1299.715406766245,1987.530060966325,15532.1155214632,4955.01903581682,2220.33995904053,1851.85185185185,4430.218835118985,5170.449576976095,2702.717909729815,3937.065788634075,1352.885345767685,2579.664258445635,1721.33334151325,6796.388262692384,2866.0716841171297,1250.48280339646,1982.103469129695,1692.8950691259352,2239.01466507026,13879.3481914427,44.62127851698405,3570.3321070291395,11005.38667833262,8500.381237947195,7128.50768664606,9985.512771635531,682.6035600201315,13.966085592112224,1739.881654647355,1070.610921591029,2857.121821094084,509.96526313218203,521.9459051409846,4593.130543614515,868.243017966971,5188.680653148105,6156.92940728951,6184.55892731122,87.5633586657402,8155.205190184995,3307.163540565445,1182.64371113264,26.698588892516398,1465.8556160027435,3639.89104082368,636.3371204753545,2744.7179685985648,362.25872099252604,3299.14038676186,3584.4579942229198,2623.566704881675,6859.67076172192,1892.600281792565,1275.95558663455,3163.097462876225,2831.53364674759,3903.56075898264,6018.514125655055,3126.57208499675,3246.008015777085,1278.1312647084465,1018.3462470888035,6059.286268232305,3329.2775149099352,5071.45113284101,1332.56766430486,3703.0782104867303,190.84928647914398,86.56828462931139,566.110405733802,2508.884328277505,1209.5881375137085,878.367882908773,6560.9142615357105,12647.27684532955,2058.8159972442,229.065204330764,1049.1154574602579,1140.42339578348,868.1323837237641,5106.129151099115,4168.945759459781,5738.285192435895,1266.2513997473352,1352.2571913611216,2471.841972512055,2499.833340579395,8212.202912118326,988.7836475906549,8660.52610614945,11304.726336406351,5024.31571860304,6422.025841886931,1458.018974840525,9247.60265777307,2143.944098093275,1103.98618478765,3807.8270542518603,4953.9192539952255,6527.145625011501,2899.383939897265,7537.88510361979,2194.4856674217,4165.012754220335,22692.7186255288,9355.97601092478,6664.17831939514,7669.563782583589,5991.714129154175,2992.4947282459398,4132.62541299843,6574.843554000815,3760.8507037169647,583.6932043082645,1309.2381487358234,13262.4843773274,545.8478204563551,884.0362811791405,7115.85066242644,2345.836732941125,3702.7645840908353,5861.264122445105,2362.575717031165,92.73125674924776,1453.100206136645,2275.8744413783697,1058.198109130893,959.8302705421825,5022.55562485944,6505.129927645735,6816.14850432083,410.92786028345597,7425.15995118954,6529.604218124965,12828.130536974499,2787.5749081346903,3461.9331927500352,440.198291285541,365.808486848306,24938.060140111353,4676.9678913028,1523.0160281894546,824.9336658390321,1690.870306097695,3610.094793481885,239.5351092787245,1438.33355431417,1617.875186792855,23.4819939340336,2053.59365486929
-2204.75062190533,5570.75684059767,2820.9477460993603,7327.65275987339,3750.39189336281,301.39939039792523,920.0761866077655,11246.884490494494,5877.41299633036,2321.8911575889397,2511.9341563786,3281.13299507834,4328.28026929684,4518.47402725971,2183.7237121097,1916.9355344138198,1179.1435804878101,1399.3175210854351,5719.042212861775,2231.5583188965047,691.6063387371465,1039.4303596614,1633.0555085136002,1755.84036540202,12570.0922703754,77.36435343797305,1757.956190597525,4948.457923398515,5642.9388575671255,4154.732240628835,11412.88600838735,357.366037038178,73.87748234542275,1231.6264696388394,1014.7397880501856,3419.568440157635,198.8201546825265,396.68659150700455,3791.4843767007396,477.23848061238596,4560.723945879239,3819.07965399447,3200.90331686662,379.906348774505,8562.67560105285,1877.70466064245,720.0699583481864,88.2214241665761,1284.27363683921,3249.1608178108,196.16321910393202,1166.1174646249256,254.9456830226125,3984.328564428925,3831.617020095715,4071.277623248955,8713.116250852934,1327.387491081478,1414.71590467628,2204.881047517655,2224.1188113398102,25.22654575944845,5009.480690186425,2518.2339392068398,4618.393555689725,1264.185478950575,4281.016210306235,3874.7392259770645,4954.69884922778,5662.159042627734,1389.905095344655,3975.01552306023,146.1386549977815,85.4350798630827,240.268462729096,1369.829647168995,838.9782791243686,1701.90756317822,4905.127358926546,10262.2986128075,1966.039562351755,229.065204330764,814.6263319689045,626.7236529166246,710.79048593536,3905.876193708285,3375.22897344995,4175.81024039687,1327.1171576481916,3801.389979010645,456.7743247942665,4662.058171383855,3373.0002027519204,512.8094420725065,11235.497082212849,10156.290553730476,3680.71626599441,4506.61532283805,1104.296862351453,4007.8998869483103,2334.003957510575,1305.0047393608252,6474.65593554521,6184.01581074509,3842.3940978842957,1781.301216583975,6560.595528539345,2827.79877312409,5436.858393591499,8122.93884868436,9892.041853310096,4621.784670276265,8199.321280764554,3417.45574180151,2911.96874096696,3512.20880295886,3980.05123584389,2966.5986742271452,619.2668068324599,1895.8877954423251,4431.816819210175,322.682985343985,509.5238095238095,5504.089253246965,1497.88866463406,3351.8256118157396,2326.790081504045,4275.956614966515,680.990973044944,2875.0376928514597,1792.4192484226699,309.517270852441,150.509273023863,7227.03353920525,6303.9240294275405,4163.090778210075,400.8057780665695,3714.2227959281,4791.8077005175655,9759.82685404497,4086.2386588672553,2879.11109312819,135.829465116689,505.3024949086315,10068.088907650885,2195.820321429665,4502.9644981469155,825.538180292418,2450.427333411495,10548.075500937324,185.5631846254515,1372.8315234110985,267.5585284280935,70.4072113112907,2354.59233101465
-2647.44699653327,11222.708086483352,8478.729158812741,8875.31819031472,9527.04728496805,1788.929491605343,3048.9525952458753,8790.5149381076,10469.29196006533,1934.85235635963,5046.91358024691,7463.45873259571,8724.419128862964,5468.1200128050805,4521.05953658948,2076.1393349126947,2474.9112818235953,2790.985606920085,6070.76493989162,3083.780748762135,3066.306632820275,2666.6029136312955,1534.9691618440102,2024.292600792815,5963.03925396972,1493.3355243938051,3290.13031282235,7998.99600653045,9444.15184400314,8596.481253981994,6550.51467784979,532.552717262914,632.8414130136855,2383.09450288886,1828.415845053875,2659.13085632989,585.081412697139,550.1755899532404,10177.9877222643,1647.73652103552,6885.31051331543,4646.2183315721,4325.081157374734,277.2627350088679,13502.8460075437,4249.32092980369,1185.2564791497389,948.380309790692,1006.7324295945295,6334.411405394256,804.2893964363004,1304.6456031530652,354.28726265469896,2799.071707261335,3305.271719855905,6608.137314555504,9898.646729603495,3513.70893577203,1053.1339837723249,986.166887080063,3401.83593664207,62.7607838265892,8760.72211608856,4273.477807777355,3103.7357746363896,741.2185130305935,737.030285690853,6130.32168399283,7611.900519907274,9154.19439270416,1295.189629873201,5317.475656392935,1399.12937725463,1496.881622608736,1480.38059771373,1928.8424175877299,1438.6792474725999,3447.3586728152895,8497.98170354039,16651.93057034535,5704.548524323115,348.9153915966815,1500.74584642652,1609.2594140209749,1363.40999065475,7865.563026424899,3078.129334465505,5509.72275071414,1900.1225297329252,66.9456066945605,3490.07847217736,8534.353578829905,5444.985644663495,1558.42065310614,1811.0602618384,15458.14965822185,2633.42360903702,4101.135816041373,1500.631415341775,8227.79046838767,3032.18168119686,1098.360049534545,5775.315329494915,4743.0979698200745,6952.812125612325,2101.0979748252803,9207.380452470185,3534.7484664051053,2927.04993920356,13199.7546750984,11110.817170338749,3833.718743595925,6070.89660858363,7438.093195497535,5830.8934913034645,5384.56293249541,6407.394922351195,3865.47891942083,766.452239545275,1578.0488314802624,9904.496078314565,436.7122496308845,356.734693877551,9403.21535864869,4027.6549147593096,3227.28395784848,4420.86891761898,2922.465899099565,0.0,2474.98430494382,5459.006492742675,1323.7602598471594,711.8586913192275,5402.55864024097,4032.51100693761,6439.236381283836,513.7185405182015,9068.15077730238,2905.937698382995,10254.633588704644,3250.99105910475,1426.9936959925105,591.8924062441055,1047.2856461704291,18461.82086798995,6810.95732413747,7072.40362013756,1503.47975406787,2100.1370740767798,6413.68684494418,307.2751246146425,1145.967012181977,2798.54835266491,246.54155106194798,1885.8771277723
-2531.4641567305853,5133.583938547175,2631.775098637255,4482.630400616735,5483.23313679585,232.137143626964,456.80939051427697,13410.6274381251,2910.71363068894,3836.0568760549304,793.4156378600815,3808.223217674515,6372.52145540662,3430.07916698938,3856.724912203495,2871.528597751285,1386.5374579793051,2533.855246997965,8231.495584967859,1845.05873221913,693.297863561599,1485.58385576311,1427.97620978042,2210.7233096455548,8154.70342896277,50.593578200940144,2386.274114338135,8561.556055302555,6650.27287408709,4746.874154578295,9850.55280213495,81.841432225064,25.953843694633647,1880.504740969855,1032.255240669584,1972.931062851445,136.1867407742495,373.0651234412825,4472.579976293845,788.2770545944975,5584.4703930333,3557.5454803847806,2010.7833450952699,296.397691929241,6632.8533728276,976.8751185127375,200.86643816286653,29.02020531795265,740.241619853163,3352.7122833412996,215.331513950656,691.606900562126,173.21278470041895,1720.36349721863,3411.981466477205,2905.364980929115,7654.345772849645,800.8928843666695,1307.2121770466824,1901.9178273335701,1097.2038991765694,1076.7963727834544,6939.894494940994,1039.944528117367,4108.399041179585,751.677852348995,2747.799168483155,3496.44368216107,3162.2274579261602,4509.900470831604,1201.293757297705,2461.03031531939,191.649598413912,455.972570025024,556.402836361379,1278.99108984334,937.6726499301135,1266.6710896851705,6566.46868309135,6475.6718308493455,2856.4338403521897,4528.1282356099255,986.430535124407,886.7378973967855,508.910701746099,5837.709726883105,3830.6093775484396,5514.261262483235,955.9527076610555,919.4555751613545,197.1731322480925,3193.60027824877,7200.49811891275,243.1910913690795,7498.1631320464,7165.60429695508,1935.235703956435,9741.730171081439,406.82576174594453,5093.69382210275,1450.07161603868,954.5973201674125,1946.812376238675,4883.684507178255,5035.19119804724,1652.894191537235,6208.33379695421,5394.312631054019,6146.190222028825,15072.2593922163,7453.044474253005,3801.9771396773695,4925.67282134795,5186.95232408288,1009.9302696618486,1378.8307901789299,769.4337555873569,1934.86692050369,389.506758638572,1975.04655876147,7418.92013909561,208.68547038539648,325.7596371882085,4343.2861304259995,3315.641058673655,3236.4203124339047,3409.3394056414754,2741.933560151385,1617.9658422537,2473.0860682277653,1527.84174716544,420.584425372066,320.4025634994405,4213.21602644489,5224.512572736416,4856.987944601195,940.391953591533,4164.12629677203,4908.779721064845,12196.06793746935,1770.3454486456649,4520.209993578475,73.34332388454375,478.2385772113005,16736.5418308933,4830.055102414681,6800.067779819845,445.8465725290655,1706.97411371913,5879.51728654386,162.637113268293,495.8185586787125,185.013876040703,0.0,1655.40188506927
+5494.4765287993305,9587.690561697935,4792.476306655964,12297.0147693001,6087.581601735,1717.3938669316149,2499.553031612805,26710.17103393585,7931.64239272782,5705.136047617205,3181.89300411523,5958.65849667313,7733.122069698535,6314.84702255228,5729.08595179187,1877.86760927061,2706.06577458133,3445.88573599739,11507.27727865745,3226.4688105568202,2243.643565660375,3727.12803789038,2944.86116315127,2112.95097060881,21899.625442341152,20.8217140732478,6516.599185425605,11276.014781052905,14933.107180462299,9338.299934769271,17089.5920701487,454.0556086237535,121.7709878609845,3193.91667296156,2165.20087264176,8367.06600038075,899.77286461257,611.5272683551785,3980.05076160506,416.42789936298004,8061.06170836825,7118.24174066458,5788.00282286521,288.160883692433,9323.2043344349,6177.82320767878,2091.174407986755,123.04567054811949,1941.85737836334,6907.42976641797,2236.79256652679,6276.15170898753,770.538595749279,4241.69951772146,5665.8561031850495,4448.91662047923,11119.211474690515,3244.7075801495002,1582.4832857898696,4062.79261211931,4286.80565839518,437.492003353933,9319.95007851753,5416.926379977385,10997.098812037366,2677.590865510328,1552.746166464258,2274.40232271784,7769.33540649887,8794.383560502709,2448.325383797825,10698.180519512485,736.474554271245,1128.4337694787755,910.9489044448965,9448.712334135329,2866.62640585957,2869.393760295985,8448.472583758961,15293.64572936225,2271.486139818345,2565.121243496825,1570.076444285835,1975.45934042286,1196.52510508088,7986.807345142025,6320.826882675665,9022.59035318966,2149.099517367925,179.52879200083402,4755.5167631360855,4918.74266336246,10488.43362878377,3491.047841184585,16823.4930750636,6955.436748080016,5040.088149584315,5747.386365130755,771.039082990642,19741.2047112406,7568.614788505005,2191.157460921895,13476.620122128901,8769.178636687335,16335.72537879865,6138.4339546910705,10462.377323291685,6738.420682652501,8409.45863405758,18158.28113986725,12367.251587688948,8915.159739898405,11239.98345556335,10639.346227572165,1815.5241799996452,8838.075326602726,10915.561209165906,3705.6999814739997,1145.7449867362502,3009.829057666415,14163.3038188426,601.193345054326,733.106575963719,14924.498374073799,3842.6876225648098,7174.50636028767,11326.916159992252,4533.879179423735,687.4325075224625,4872.93183649459,3221.837194267175,882.0590143574535,255.79108435261952,7367.973792941825,10994.14573999505,4734.006461594985,1181.925948023277,13596.830131573,11701.22945479845,19525.8673027819,4166.54021002665,3690.621216484525,1351.8630136127765,688.194790952144,32284.726414113502,3230.3600246802152,2649.6000556142126,1511.531695844754,5100.77193572339,7920.618659552851,1087.3367717093656,1398.5883272144001,2661.92272112716,94.083057699375,3933.357985816535
+8999.999860258325,8025.929723163845,3818.329907625995,12427.3561973745,6533.07097491628,835.6937170570704,1713.65330352196,18989.24539228865,13762.1951633191,7924.21675648682,6860.905349794215,5470.665321080474,8224.12698387521,6491.5896654546195,4030.76813399972,1927.252033743215,2419.207431336055,3295.26920629672,13014.49364901845,2316.600080475855,1560.241949760645,2622.361616666365,1344.451924752475,1967.667279297195,18837.17095267675,77.3543940721855,1901.02011571891,10710.5994542335,8450.559699814661,7958.427064368856,12351.5059092642,403.43060220421296,21.9588374524364,6579.039070268485,2853.987362524478,3630.8720671629403,1313.1179240329361,415.72075757693347,5528.6449287017,665.6913842457766,6978.58660027462,6489.705125581395,5029.668313338039,828.6212907867705,11253.878928086851,3594.1570028557153,755.5056245800605,145.1010265897633,2552.249080912655,4917.374959490135,1454.722445407357,966.595593461263,706.0864158060991,1870.9130124275848,4300.531342337936,6258.12488112304,8094.009876031359,2674.56361790092,1750.2506669034601,4162.659350107255,2227.7285002981853,76.2907984224091,7195.418554211956,2892.36404623844,11722.94075070785,315.1747581277785,1811.917353933615,3273.5913167929302,13069.60259775955,14346.32427152325,1422.94126315942,7532.08978030119,513.3152181336466,1037.18752625784,945.3221212921956,3665.94304777488,1373.038968345445,4062.9810038214946,9538.004429489643,12803.41583763025,1877.930980698155,4954.35313366824,1830.470700650425,1428.5311216222349,1177.3051906713765,6933.87545661329,4186.010585244505,3925.84375612118,922.1184217156415,156.961796232146,1849.721038213435,9113.57477211134,6407.0279822679695,1911.2531536214,15260.43179959975,11479.237062008237,6580.105934741635,4490.2278146227345,2956.3190104588302,6775.1597387862,6399.940388962025,1066.902574246725,7247.13333148999,8624.24126488887,5084.13928618665,2855.14248512226,14858.66715261135,2120.849079843065,3738.809885625635,14336.9185176867,14458.00820806165,9681.462160400115,9594.051507941525,6186.339349397825,4137.480822857775,8480.552337517405,8865.68647197046,2917.04975522403,776.4791176143065,2293.56599398055,9185.59370831684,660.5084905581559,660.8616780045365,17004.8810369434,7793.79768397246,6058.101515148655,7300.491096322675,3858.41048969762,3216.94257766222,4008.917757905615,2758.3499833485102,946.359699513477,560.0100716662945,8141.264074136505,8555.64198032937,5901.654418537941,200.25455598769,7257.204978494085,4719.296757399599,15267.361443209451,5157.84850466831,1457.5517373876696,403.9986400926925,488.8186465627665,19469.2561769294,3349.393630427875,7677.2290219285105,863.269244567992,2790.7426701499253,11967.008032931419,744.33879293009,1863.9908638607149,638.724827438981,0.0,3104.97528915352
+2396.304224085275,11122.563761486901,3932.27887460442,8538.009807499475,4230.089384244355,603.2197767037705,1260.15639419108,12888.7437023089,6395.771356779005,5392.33513137035,1320.1646090534964,5029.656071892635,5454.613347213385,6108.923856658976,3002.64729573137,1874.64270046002,1880.29103564628,2088.6017468802147,12399.051133825784,1357.624245117995,2417.7066328628252,1065.63808285826,887.2646318084685,1609.69416209758,15454.82932753985,17.85050327995115,1072.4374942532,5501.253202342925,5014.48562057299,6528.549113992695,4512.390392680135,146.40248975441386,0.0,2609.98868805421,898.2026609455055,4453.417822337995,245.3971342603665,224.344688163926,2351.435938894405,223.24252883712848,6582.410745948215,2640.4971056827,2010.7833450952699,142.5596758766412,12771.19180684775,2543.231787800505,227.1029836678805,1.160808212718105,733.482614979773,4709.584794189515,561.5936389817,4801.9642049492795,70.8729074547621,2506.608705555785,3344.57041131142,2919.2266585728103,10223.600655860198,1140.8622952450485,3382.5787427066102,2080.62337352583,1821.49837987914,1538.8192913263551,5130.335294311049,1962.35772540763,9187.794605014735,1808.071123507365,981.0163198504579,3553.5231456623296,6154.8256957784,7579.777763795535,902.7405422891645,5229.52636329512,251.571948905285,330.0863597628575,426.99175152253554,3261.756050267385,729.915744745245,1597.401161977365,8511.869810618919,9965.401957238944,1877.48751861399,2160.1666858406497,1002.724025225384,846.4912226204725,750.8837230646229,5199.681713585055,2938.5091586063,3244.993091297565,995.1144554205425,67.19740023172875,1208.290642581155,6196.368273843165,3900.788729997025,576.3007233921564,10597.3396238748,12212.2546354908,2314.864780495045,3208.242523540885,769.8733931289065,3560.77779549088,2976.14730549829,639.055763744217,4098.973496200225,5216.081235792864,6745.584354791095,1885.639918764385,11788.21014559235,1568.86306694945,3589.5214815973204,13078.7600350811,9656.622012136639,7207.255052670215,7813.247634843645,4228.360276237895,4225.2638833907895,5133.390381580535,5563.11867281497,828.679140840009,606.3920806914855,1403.364008212885,10928.33291055178,258.4273578949,172.9251700680275,10164.568494177289,6780.363865389845,2014.8469181421951,3577.151983181685,3179.3247587307,457.21474926872247,6082.583183797755,1954.228279528465,678.7775185358795,330.0844671470515,5495.15067194133,7054.456068231825,3967.9923193079003,389.966752795975,3920.2049327891746,2144.3865062138048,8585.559234104796,3075.149277763185,2756.8077562358603,168.77807913233102,109.50798874915155,12984.3961493977,1895.7992264507202,5030.687747928585,823.5387360884375,2798.163399083175,9209.73858520562,216.259971783926,1389.217415152845,158.827296662634,0.0,2271.8989317514797
+6365.22243450313,6624.020399952689,4439.450265348725,13665.1837174301,3912.57343424389,463.76909216442397,1642.37209326209,16197.374329627,11400.815109433079,5737.407950440245,1325.102880658435,7015.379889540654,7132.488346774346,6755.7204915953,6005.66937391538,2870.529838679355,2886.69060381126,2592.101100292365,10344.59370590065,2209.8466749836252,1472.153737996195,929.810150733037,1654.930392276256,1781.0448555624414,19603.8161611166,56.5227206331501,1508.500561587965,9831.147135225105,8423.64201058959,8676.897497662425,7836.828059473885,130.64226214320195,21.947879948717656,4794.823221118735,2024.9146456882895,4710.184796121524,358.155659134352,417.88107703885817,3580.137545602255,210.57898194986893,6370.7901153067,4669.742285935865,3903.683839096685,189.69937634312768,10438.2704911637,3399.596809780035,541.758438029878,22.055356041644,1536.334546640575,6169.256148906939,974.08084862387,7305.808619241459,247.02339944240202,1732.1298283113751,3232.532338156335,5471.41065447667,10141.656388433825,3013.94220041686,2428.42396190603,2440.50738389289,2297.29072949824,77.513120710537,5818.9317235269,2383.225148795505,9425.190281680505,1482.43702606119,449.758776480589,1482.810344795706,12954.57787937815,12191.54036415595,1044.036876699317,8179.24771520268,347.96777482441746,335.1494963292085,541.8257228580055,6266.671586359051,577.6129178702745,2174.50168008343,6679.90435905356,5029.785146957455,1387.0882158412196,873.72013651877,1630.07521064502,777.8087669880521,549.9721791423705,6181.8921369491645,3480.36640658757,5209.702800981155,937.3831622984944,246.726192232563,1882.78134316767,11724.475747431301,9579.43920320999,1204.99839459112,12107.37963012125,8144.21746651166,3908.7388568564797,3152.007615534575,1272.41524463297,7307.020160034041,10092.01626056649,617.6287027966205,4884.487503163826,6430.209836454334,10101.757209430576,2626.815532744005,19812.63894192825,2585.740121005295,2131.5084202784747,15375.371665202181,11740.15789985415,10580.010251682434,10399.24794001622,8366.655833993336,6136.150765625171,6517.94086939313,6544.212293069026,2746.33250566861,573.5821162188765,1121.522955195886,5770.5566956427,269.48925356851703,836.190476190477,20882.4549856306,8781.222713674275,2609.90896286732,3826.2423030246846,3306.612360077705,239.880059970015,5357.61494465948,2567.260400799145,578.2936532717774,162.7838137793805,5951.426604096475,6971.068633240775,3743.66884700119,200.5017777303478,9360.08840137574,1812.578417593261,12760.47888809628,3436.05846700211,2000.2767868279898,442.6721851202585,247.6467850599445,16228.42289201284,3148.297010096995,7369.939649891165,696.12760502197,5009.70578844876,9488.717677379165,180.981539888973,2359.794893463575,294.314381270903,0.0,1680.98229224619
+7558.170918077425,17924.2046770267,8236.244195870146,12503.0215782791,9878.77657509259,858.8653318289751,4857.996606415825,20624.1288772626,10319.295082010554,5985.7033332849105,2772.01646090535,2715.428655522195,6235.937583736049,9914.966971457507,6572.106029974925,2600.219105278335,3358.337981347345,3257.788674342275,17517.3774010877,2497.216175309405,4414.893162913805,2443.077629880755,1816.2401696665152,2255.696385572075,28098.380776787802,8.92359174567765,3952.386072885075,12680.056998977725,11396.22730564667,10235.371835446149,9079.67975600458,144.578313253012,13.966085592112224,4729.444134734635,3267.2283209759053,9540.998893023829,1349.759241763695,736.755209863048,7476.15626909091,171.90478361475,8448.225109393745,6850.707176005105,2285.391672547635,105.9379326013258,13105.108281475601,6618.313933839419,1181.8123758544743,5.804041063590525,1018.758411886543,3442.171071510515,2635.93872753698,4404.988046779095,939.2260612680175,3366.1777196841304,6322.3307298308555,6397.907721071206,11403.2410411222,5397.8624644499,303.92298328764,2393.072917876595,4838.086531313315,262.1285053259215,8030.529615758154,5928.8847318859,9706.373851137954,1794.1253377495,840.394002939688,7177.02530487444,9775.564101109085,12439.899875127601,1972.734691043845,7663.126236667635,414.518563061151,1263.20884537029,351.7202979000255,8201.34434835496,1471.81132318953,2966.6772142087702,9697.635304788251,22714.1357621967,3317.4774426727554,764.505119453925,2004.5726182920398,1607.199377242175,1266.030735627545,3359.6034076767446,4546.60739264698,6679.488754279821,2181.3027244894047,22.31520223152025,5036.42654006287,8018.665855107751,12537.601469826255,1876.03584070433,12272.0109076476,16509.284746293648,3422.698517959805,6248.024985771335,92.2190201729105,15825.695321605148,7240.754079630415,1647.54450845725,12058.904668420684,4867.78039312127,10548.193150636385,5414.473261578165,21876.471663876902,5233.581071744005,4476.12734049292,14578.01923960384,13349.469758144001,12310.06373490575,14912.967599006552,9459.946610235475,4342.397805387644,11354.204432295184,14132.23935972865,2676.05997577271,1131.5024765728726,3435.85804424934,14312.4480391589,887.221850221945,559.1836734693875,15697.008165473051,6808.62713101731,6539.667182813604,9856.73762666122,4189.07867620739,226.99699101498203,4516.2215202701045,4512.43277926796,1442.325683231148,558.06448553646,4106.9044007046805,6607.8153440385995,6733.407378589385,1586.080756630385,11347.7169668526,7457.414291615036,17410.9366988338,3780.7688976055097,3144.6510289665102,2838.264431628105,121.53345987630951,19243.6632334454,5942.88332327026,4535.92982181728,3094.941823731005,4469.40829567299,7556.820383063645,486.11226385244004,1475.765923469185,1476.6953675371785,23.4819939340336,5222.996995658715
+3102.79249972915,3385.3631120352547,2807.7951832879826,7251.71740376425,3358.7795586972147,766.0946735597729,1202.748370816621,12128.556781095906,3717.239381677755,1565.74736853528,266.6666666666665,3607.982463200355,3786.9215010893304,2782.5700535771,4023.4412149444197,1959.1481467554124,2703.2269064336597,2287.85945200064,7466.208635592146,300.4880742532835,1394.226471044494,622.6171949208775,818.4190794073489,2201.5518659503145,11455.998811952359,41.64840782938945,379.435568993245,8853.013383545334,5848.831237127455,6023.817782046725,705.299275638582,1419.7845088795095,9.97381872584465,1997.9015539074414,1234.4120530989126,1372.8241578799755,680.5916743754068,47.2377074437586,3011.34210539489,289.2195769725548,3808.88153199085,3837.000962386095,732.1383203952009,1679.4210927282363,5158.77486327279,1862.87925290753,265.5077044646385,18.57293140348967,806.065680594198,4658.294980585744,1453.2820521282924,2538.993344963495,485.2284082991105,1989.60190239032,1971.1756824684749,1578.985847256701,5054.112799124065,507.31654847674855,188.60510805501,1270.2064323986451,2076.91925972646,465.16319368963696,3635.26407643966,2346.8046958884697,2149.582226532725,838.141724047766,911.340860799444,1975.747253364022,1976.2659660293398,3804.67443124478,684.400750795091,2483.1998531012,214.1187789495395,369.86203313379553,318.694786353243,1154.8356971182895,87.2604253750777,906.845942373378,6148.260336084995,5726.956657588795,980.4581842900285,436.8600682593855,684.123326562393,547.1164639104895,398.495812225101,3414.5969086114715,1452.298000503155,3128.3043359817375,552.117472966074,89.260808926081,1929.350573661995,520.325203252035,4859.949987859915,1313.652311065275,6828.985984237001,3148.859454470775,1411.61907365316,3054.871627005995,642.0360716251676,4379.279511630622,2370.3666906766675,756.887827994756,3068.984577557805,3132.6465504637554,5557.2147986144355,1556.7360458867195,7906.5289926102905,1346.0306779060188,2154.5532736587647,5249.55158254955,6463.78286910074,5157.544613659725,5107.703565414405,6302.49411757699,2201.092395968535,1810.1659248042151,2327.840144167065,272.243555997147,283.0432594615205,1215.779674530065,7701.916502136465,239.0991784562902,71.3378684807258,11220.19667516015,7674.947395542575,1775.0261466520647,2329.0772108196998,1387.298513635147,47.976011994003,2628.4251061579,1692.400363374305,350.4074344657631,235.14582274757635,3502.0186428510096,4724.44366480399,3122.91762524644,190.070668335139,6128.174994505371,1573.16988653532,12238.192272437285,1635.1086343929126,2055.579861489965,967.1849165719134,159.030957269888,12151.725717796431,2199.41900099767,2447.44239801527,1313.581769089735,3902.28882002004,4962.034082796685,1136.6992941943,456.04786296363704,1501.1741265210255,11.7603822124219,1509.36179406766
+2548.3680758077053,5013.28501668675,3124.8458377682496,5448.280932111065,2782.1365487283565,116.11067140427386,625.4202679752335,11246.594109131216,5478.3817077696,2533.113804675855,660.0823045267484,4797.887549748015,8191.769363060479,3263.7487372978903,3774.4521556003747,1157.0363128141498,1885.6143420245148,2436.5985967491,5995.53621487583,708.0528042803726,1785.474458211003,374.537934743499,747.6068904260829,1861.450914501685,19601.5717764428,44.6179587283882,514.6909653851085,8098.222351802761,7243.28476294074,4211.216688412365,2468.92870758673,193.0751137542498,13.9825218476904,1356.3474138788151,594.181142380802,1179.8008327865,447.1024588197404,214.9051639962915,1337.5441768648243,258.19139533150803,7129.87801810402,1755.82611994146,2111.05151729005,126.08605940302475,4259.292411199305,2342.7101241426053,101.145792177005,30.18101353067075,638.7030895029725,4542.99781080819,627.0929325660364,2556.5678102991515,155.59444406313708,2322.476898791405,4085.6530041617602,2956.37592219116,5118.552981084245,830.937200167426,552.7917448266426,2668.0840924082104,1533.240305860625,1136.2479426104774,8004.03656890688,1809.240988344165,3118.2165076034653,1489.4099189401204,418.8617431429007,1667.79556597511,2677.72102037066,6156.712802216305,933.0710252493909,3808.3961049774152,308.6880497647765,517.8503882453265,539.500203094183,9365.44263871943,206.95107012204025,1590.461383312905,5434.3260482746955,2587.9387566464843,735.83360065735,229.065204330764,613.165239873884,312.7142399530745,489.280549389926,6456.088393408279,2043.01625239519,4992.192226397265,717.943389287605,357.5468227786596,1312.9180131377998,1298.4942683651416,5440.767904120857,1305.268987137565,11272.75117772815,1067.2269579898405,2709.3483444110952,3284.82358238604,228.216170708804,11048.41956629389,5662.485614697434,688.4208812449885,4659.90033158995,4085.23030896451,11044.17456678226,2252.558128661955,11429.08584530122,1260.858332482173,2028.85366132814,13351.37982803076,4519.923707017085,4556.799327704375,7698.939815058806,6457.143773202035,941.875495388972,1911.40979361632,3025.97056589106,954.4391133921936,309.7207323262294,2243.150598277465,14409.955091691401,237.6886011556275,938.5941043083906,3632.29434803292,181.74661112781095,3463.4378283709502,7242.151380997495,1121.8493895721624,0.0,1586.45133543919,1563.237610557339,279.2103964946414,126.61050219356079,6188.1424516395455,8565.877581532724,3195.56364218523,71.86818466310476,6542.1616224974305,1858.6717452713801,12711.57327203684,726.0653768058614,2680.562294993085,198.277628472444,89.92278273641935,15725.545643392801,2038.9513179411485,1075.564940453692,595.6941190263965,2471.1617230779248,1933.7357886445798,174.269246817286,1209.116871170353,26.18657937806875,35.2811466372657,1774.295094233105
+2032.4500042731001,5176.098019155415,3201.546001662275,9640.551885666135,3487.394091397694,69.59904349729726,786.6994745385405,13771.844480287034,8783.49027959636,3878.14234229283,1330.0411522633729,4582.297737960435,5230.542900219655,4421.52436513562,3248.2824389548105,939.7320096767329,980.917685909252,1392.354982713146,4068.588242661665,1010.1571299415621,1252.340273605928,226.471684278769,714.937162652886,1388.0051236247186,14612.82795341775,14.8809523809524,549.8140129144194,6920.589762693666,7383.235568826394,4537.56081822428,1020.2058711399164,261.8925831202045,23.961819325394448,1798.584335705274,501.9587818426355,254.5258148442265,55.64746592550145,47.223764276598146,3711.636041630227,113.88126779345725,4315.36177456514,4518.669714856425,672.9710656316165,482.9301540325355,8330.931459342584,1178.5050105565115,353.8915104369229,40.62828744513367,353.516563399908,3389.42127938217,658.7382199674965,3370.162176132325,474.3411956908555,1428.09568214732,2522.641280979965,3858.8118825630845,5682.70594578427,614.3973122364346,662.900188323915,1055.6653532162175,1032.046849672015,25.8377069035123,5163.8648287368,1113.0888230162766,7120.3722931148095,1707.6614660507266,402.6450833433865,2411.911140945065,5631.81104767173,9163.474405129755,1286.3167456305825,4101.067783149055,407.5965616524205,415.698212126419,499.895787879099,3268.4251174046403,294.00353806154874,1983.4195501324898,6475.06635838804,7703.043494089616,546.2287657704965,1025.4758343879005,690.494556965406,419.5790551661775,632.659979196864,2797.893164928455,2745.39428891247,1752.4379493299216,522.6267824857725,736.6534671773334,600.0657027514055,3102.241931510225,6679.884005877285,833.8372479107204,6295.490620858485,6365.08403574214,1328.5397778374004,1996.961493046022,1553.735064598645,5071.56777197042,1732.661053293926,753.526265193817,3465.065052460975,5815.129105046774,4982.427960601351,1603.3859215154,15939.012825538,2027.986229189075,1744.092886533334,8397.58409250984,8397.384417419726,7404.70348841111,6934.23586417779,6600.231994413851,3231.20254771728,2135.165190643815,739.639228988887,744.36639007338,395.980768662363,2221.80571983324,6690.168776022025,212.814315366317,1652.6077097505665,11002.51676430915,6841.291994102575,2962.82710431349,2819.7224294992247,1526.3802828159285,0.0,3004.275975935895,1260.020848889811,269.09981197647386,122.74006164281094,3357.2857042643,3194.0159712229924,3812.5247998462246,185.00344668312914,6905.5737865406645,2813.4671734182753,13207.833247087525,1412.0102574659645,1358.265020208475,262.882299124512,105.7000895672999,11672.09759575126,4497.7200922402835,7232.9131853473955,463.03801424045696,2487.47198977143,10148.675030211345,616.334561666053,853.6355107621321,293.74510780616225,23.4819939340336,1152.864711051951
